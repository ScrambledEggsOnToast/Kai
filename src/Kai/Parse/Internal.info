-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from Internal.y
-----------------------------------------------------------------------------

state 23 contains 2 shift/reduce conflicts.
state 55 contains 1 reduce/reduce conflicts.
state 66 contains 1 reduce/reduce conflicts.
state 89 contains 1 shift/reduce conflicts.
state 122 contains 2 shift/reduce conflicts.
state 128 contains 21 shift/reduce conflicts.
state 152 contains 21 shift/reduce conflicts.
state 171 contains 2 shift/reduce conflicts.
state 187 contains 3 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseTyping -> Typing                       (0)
	%start_parseCall -> Funccall                       (1)
	%start_parseTA -> TypingArgs                       (2)
	Typing -> Typing1                                  (3)
	Typing1 ->                                         (4)
	Typing1 -> Typingbit Typing1                       (5)
	Typing1 -> Kailua Typing1                          (6)
	Typing1 -> '[' Math ']' Typing1                    (7)
	Typingbit -> newpar                                (8)
	Typingbit -> space                                 (9)
	Typingbit -> symbol                                (10)
	Math ->                                            (11)
	Math -> Mathbit Math                               (12)
	Math -> Kailua Math                                (13)
	Mathbit -> symbol                                  (14)
	Mathbit -> '{' Math '}'                            (15)
	Mathbit -> Mathbit Mathbinop Mathbit               (16)
	Mathbinop -> '^'                                   (17)
	Mathbinop -> '_'                                   (18)
	Kailua -> inline                                   (19)
	Kailua -> '{' Block '}'                            (20)
	Block -> Retstat                                   (21)
	Block ->                                           (22)
	Block -> Stat Block                                (23)
	Stat -> ';'                                        (24)
	Stat -> Varlist1 '=' Explist1                      (25)
	Stat -> Funccall                                   (26)
	Stat -> Label                                      (27)
	Stat -> break                                      (28)
	Stat -> goto Ident                                 (29)
	Stat -> do Block end                               (30)
	Stat -> while Exp do Block end                     (31)
	Stat -> repeat Block until Exp                     (32)
	Stat -> If                                         (33)
	Stat -> for Ident '=' Exp ',' Exp do Block end     (34)
	Stat -> for Ident '=' Exp ',' Exp ',' Exp do Block end   (35)
	Stat -> for Identlist1 in Explist1 do Block end    (36)
	Stat -> function Funcname Funcbody                 (37)
	Stat -> local function Ident Funcbody              (38)
	Stat -> local Identlist1                           (39)
	Stat -> local Identlist1 '=' Explist               (40)
	If -> If1 end                                      (41)
	If -> If1 else Block end                           (42)
	If1 -> if Exp then Block ElseIf                    (43)
	If1 -> if Exp then Block                           (44)
	ElseIf -> ElseIf1                                  (45)
	ElseIf -> ElseIf1 ElseIf                           (46)
	ElseIf1 -> elseif Exp then Block                   (47)
	Retstat -> return Explist                          (48)
	Retstat -> return Explist ';'                      (49)
	Label -> '::' Ident '::'                           (50)
	Funcname -> Funcname1                              (51)
	Funcname -> Funcname1 ':' Ident                    (52)
	Funcname1 -> Ident                                 (53)
	Funcname1 -> Ident '.' Funcname1                   (54)
	Varlist1 -> Varlist11                              (55)
	Varlist11 -> Var                                   (56)
	Varlist11 -> Var ',' Varlist11                     (57)
	Var -> Ident                                       (58)
	Var -> Prefixexp '[' Exp ']'                       (59)
	Var -> Prefixexp '.' Ident                         (60)
	Identlist1 -> Identlist11                          (61)
	Identlist11 -> Ident                               (62)
	Identlist11 -> Ident ',' Identlist11               (63)
	Ident -> ident                                     (64)
	Explist -> Explist11                               (65)
	Explist ->                                         (66)
	Explist1 -> Explist11                              (67)
	Explist11 -> Exp                                   (68)
	Explist11 -> Exp ',' Explist11                     (69)
	Exp -> nil                                         (70)
	Exp -> false                                       (71)
	Exp -> true                                        (72)
	Exp -> int                                         (73)
	Exp -> float                                       (74)
	Exp -> String                                      (75)
	Exp -> '...'                                       (76)
	Exp -> function Funcbody                           (77)
	Exp -> Prefixexp                                   (78)
	Exp -> Tableconstructor                            (79)
	Exp -> '<' Typing '>'                              (80)
	Exp -> Exp Binop Exp                               (81)
	Exp -> Unop Exp                                    (82)
	Prefixexp -> Var                                   (83)
	Prefixexp -> Funccall                              (84)
	Prefixexp -> '(' Exp ')'                           (85)
	Funccall -> Prefixexp Args                         (86)
	Funccall -> Prefixexp ':' Ident Args               (87)
	Args -> '(' Explist ')'                            (88)
	Args -> Tableconstructor                           (89)
	Args -> String                                     (90)
	Args -> TypingArgs                                 (91)
	TypingArgs -> '<' Typing '>' TypingArgs            (92)
	TypingArgs -> '<' Typing '>'                       (93)
	Funcbody -> '(' ')' Block end                      (94)
	Funcbody -> '(' '...' ')' Block end                (95)
	Funcbody -> '(' Identlist11 ')' Block end          (96)
	Funcbody -> '(' Identlist11 ',' '...' ')' Block end   (97)
	Tableconstructor -> '{' '}'                        (98)
	Tableconstructor -> '{' Fieldlist '}'              (99)
	Tableconstructor -> '{' Fieldlist ',' '}'          (100)
	Tableconstructor -> '{' Fieldlist ';' '}'          (101)
	Fieldlist -> Field                                 (102)
	Fieldlist -> Field ',' Fieldlist                   (103)
	Fieldlist -> Field ';' Fieldlist                   (104)
	Field -> '[' Exp ']' '=' Exp                       (105)
	Field -> Ident '=' Exp                             (106)
	Field -> Exp                                       (107)
	Binop -> '+'                                       (108)
	Binop -> '-'                                       (109)
	Binop -> '*'                                       (110)
	Binop -> '/'                                       (111)
	Binop -> '//'                                      (112)
	Binop -> '^'                                       (113)
	Binop -> '%'                                       (114)
	Binop -> '&'                                       (115)
	Binop -> '~'                                       (116)
	Binop -> '|'                                       (117)
	Binop -> '>>'                                      (118)
	Binop -> '<<'                                      (119)
	Binop -> '..'                                      (120)
	Binop -> '<'                                       (121)
	Binop -> '<='                                      (122)
	Binop -> '>'                                       (123)
	Binop -> '>='                                      (124)
	Binop -> '=='                                      (125)
	Binop -> '~='                                      (126)
	Binop -> and                                       (127)
	Binop -> or                                        (128)
	Unop -> '-'                                        (129)
	Unop -> not                                        (130)
	Unop -> '#'                                        (131)
	Unop -> '~'                                        (132)
	String -> '\'' string '\''                         (133)
	String -> '"' string '"'                           (134)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	and            { TkLua Lua.TkAnd }
	break          { TkLua Lua.TkBreak }
	do             { TkLua Lua.TkDo }
	else           { TkLua Lua.TkElse }
	elseif         { TkLua Lua.TkElseif }
	end            { TkLua Lua.TkEnd }
	false          { TkLua Lua.TkFalse }
	for            { TkLua Lua.TkFor }
	function       { TkLua Lua.TkFunction }
	goto           { TkLua Lua.TkGoto }
	if             { TkLua Lua.TkIf }
	in             { TkLua Lua.TkIn }
	local          { TkLua Lua.TkLocal }
	nil            { TkLua Lua.TkNil }
	not            { TkLua Lua.TkNot }
	or             { TkLua Lua.TkOr }
	repeat         { TkLua Lua.TkRepeat }
	return         { TkLua Lua.TkReturn }
	then           { TkLua Lua.TkThen }
	true           { TkLua Lua.TkTrue }
	until          { TkLua Lua.TkUntil }
	while          { TkLua Lua.TkWhile }
	'+'            { TkLua Lua.TkPlus }
	'-'            { TkLua Lua.TkDash }
	'*'            { TkLua Lua.TkMult }
	'/'            { TkLua Lua.TkFloatDiv }
	'%'            { TkLua Lua.TkModulo }
	'^'            { TkLua Lua.TkExponent }
	'_'            { TkUnderscore }
	'#'            { TkLua Lua.TkLength }
	'&'            { TkLua Lua.TkBitwiseAnd }
	'~'            { TkLua Lua.TkTilde }
	'|'            { TkLua Lua.TkBitwiseOr }
	'<<'           { TkLua Lua.TkLShift }
	'>>'           { TkLua Lua.TkRShift }
	'//'           { TkLua Lua.TkFloorDiv }
	'=='           { TkLua Lua.TkEq }
	'~='           { TkLua Lua.TkNeq }
	'<='           { TkLua Lua.TkLeq }
	'>='           { TkLua Lua.TkGeq }
	'<'            { TkLua Lua.TkLt }
	'>'            { TkLua Lua.TkGt }
	'='            { TkLua Lua.TkAssign }
	'('            { TkLua Lua.TkLParen }
	')'            { TkLua Lua.TkRParen }
	'{'            { TkLua Lua.TkLBrace }
	'}'            { TkLua Lua.TkRBrace }
	'['            { TkLua Lua.TkLBracket }
	']'            { TkLua Lua.TkRBracket }
	'::'           { TkLua Lua.TkLabel }
	';'            { TkLua Lua.TkSemi }
	':'            { TkLua Lua.TkColon }
	','            { TkLua Lua.TkComma }
	'.'            { TkLua Lua.TkDot }
	'..'           { TkLua Lua.TkConcat }
	'...'          { TkLua Lua.TkVararg }
	'\''           { TkLua Lua.TkQuote }
	'"'            { TkLua Lua.TkDoubleQuote }
	ident          { TkLua (Lua.TkIdent $$) }
	string         { TkLua (Lua.TkStringLit $$) }
	int            { TkLua (Lua.TkIntLit $$) }
	float          { TkLua (Lua.TkFloatLit $$) }
	inline         { TkInline $$ }
	newpar         { TkNewPar }
	space          { TkSpace }
	symbol         { TkSymbol $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseTyping rule  0
	%start_parseCall rule  1
	%start_parseTA  rule  2
	Typing          rule  3
	Typing1         rules 4, 5, 6, 7
	Typingbit       rules 8, 9, 10
	Math            rules 11, 12, 13
	Mathbit         rules 14, 15, 16
	Mathbinop       rules 17, 18
	Kailua          rules 19, 20
	Block           rules 21, 22, 23
	Stat            rules 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40
	If              rules 41, 42
	If1             rules 43, 44
	ElseIf          rules 45, 46
	ElseIf1         rule  47
	Retstat         rules 48, 49
	Label           rule  50
	Funcname        rules 51, 52
	Funcname1       rules 53, 54
	Varlist1        rule  55
	Varlist11       rules 56, 57
	Var             rules 58, 59, 60
	Identlist1      rule  61
	Identlist11     rules 62, 63
	Ident           rule  64
	Explist         rules 65, 66
	Explist1        rule  67
	Explist11       rules 68, 69
	Exp             rules 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82
	Prefixexp       rules 83, 84, 85
	Funccall        rules 86, 87
	Args            rules 88, 89, 90, 91
	TypingArgs      rules 92, 93
	Funcbody        rules 94, 95, 96, 97
	Tableconstructor rules 98, 99, 100, 101
	Fieldlist       rules 102, 103, 104
	Field           rules 105, 106, 107
	Binop           rules 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
	Unop            rules 129, 130, 131, 132
	String          rules 133, 134

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'{'            shift, and enter state 7
	'['            shift, and enter state 8
	inline         shift, and enter state 9
	newpar         shift, and enter state 10
	space          shift, and enter state 11
	symbol         shift, and enter state 12
	%eof           reduce using rule 4

	Typing         goto state 21
	Typing1        goto state 4
	Typingbit      goto state 5
	Kailua         goto state 6

State 1


	'('            shift, and enter state 19
	ident          shift, and enter state 20

	Var            goto state 15
	Ident          goto state 16
	Prefixexp      goto state 17
	Funccall       goto state 18

State 2


	'<'            shift, and enter state 14

	TypingArgs     goto state 13

State 3


	'{'            shift, and enter state 7
	'['            shift, and enter state 8
	inline         shift, and enter state 9
	newpar         shift, and enter state 10
	space          shift, and enter state 11
	symbol         shift, and enter state 12

	Typing1        goto state 4
	Typingbit      goto state 5
	Kailua         goto state 6

State 4

	Typing -> Typing1 .                                 (rule 3)

	'>'            reduce using rule 3
	%eof           reduce using rule 3


State 5

	Typing1 -> Typingbit . Typing1                      (rule 5)

	'>'            reduce using rule 4
	'{'            shift, and enter state 7
	'['            shift, and enter state 8
	inline         shift, and enter state 9
	newpar         shift, and enter state 10
	space          shift, and enter state 11
	symbol         shift, and enter state 12
	%eof           reduce using rule 4

	Typing1        goto state 80
	Typingbit      goto state 5
	Kailua         goto state 6

State 6

	Typing1 -> Kailua . Typing1                         (rule 6)

	'>'            reduce using rule 4
	'{'            shift, and enter state 7
	'['            shift, and enter state 8
	inline         shift, and enter state 9
	newpar         shift, and enter state 10
	space          shift, and enter state 11
	symbol         shift, and enter state 12
	%eof           reduce using rule 4

	Typing1        goto state 79
	Typingbit      goto state 5
	Kailua         goto state 6

State 7

	Kailua -> '{' . Block '}'                           (rule 20)

	break          shift, and enter state 67
	do             shift, and enter state 68
	for            shift, and enter state 69
	function       shift, and enter state 70
	goto           shift, and enter state 71
	if             shift, and enter state 72
	local          shift, and enter state 73
	repeat         shift, and enter state 74
	return         shift, and enter state 75
	while          shift, and enter state 76
	'('            shift, and enter state 19
	'}'            reduce using rule 22
	'::'           shift, and enter state 77
	';'            shift, and enter state 78
	ident          shift, and enter state 20

	Block          goto state 57
	Stat           goto state 58
	If             goto state 59
	If1            goto state 60
	Retstat        goto state 61
	Label          goto state 62
	Varlist1       goto state 63
	Varlist11      goto state 64
	Var            goto state 65
	Ident          goto state 16
	Prefixexp      goto state 17
	Funccall       goto state 66

State 8

	Typing1 -> '[' . Math ']' Typing1                   (rule 7)

	'{'            shift, and enter state 55
	']'            reduce using rule 11
	inline         shift, and enter state 9
	symbol         shift, and enter state 56

	Math           goto state 52
	Mathbit        goto state 53
	Kailua         goto state 54

State 9

	Kailua -> inline .                                  (rule 19)

	'>'            reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	'['            reduce using rule 19
	']'            reduce using rule 19
	inline         reduce using rule 19
	newpar         reduce using rule 19
	space          reduce using rule 19
	symbol         reduce using rule 19
	%eof           reduce using rule 19


State 10

	Typingbit -> newpar .                               (rule 8)

	'>'            reduce using rule 8
	'{'            reduce using rule 8
	'['            reduce using rule 8
	inline         reduce using rule 8
	newpar         reduce using rule 8
	space          reduce using rule 8
	symbol         reduce using rule 8
	%eof           reduce using rule 8


State 11

	Typingbit -> space .                                (rule 9)

	'>'            reduce using rule 9
	'{'            reduce using rule 9
	'['            reduce using rule 9
	inline         reduce using rule 9
	newpar         reduce using rule 9
	space          reduce using rule 9
	symbol         reduce using rule 9
	%eof           reduce using rule 9


State 12

	Typingbit -> symbol .                               (rule 10)

	'>'            reduce using rule 10
	'{'            reduce using rule 10
	'['            reduce using rule 10
	inline         reduce using rule 10
	newpar         reduce using rule 10
	space          reduce using rule 10
	symbol         reduce using rule 10
	%eof           reduce using rule 10


State 13

	%start_parseTA -> TypingArgs .                      (rule 2)

	%eof           accept


State 14

	TypingArgs -> '<' . Typing '>' TypingArgs           (rule 92)
	TypingArgs -> '<' . Typing '>'                      (rule 93)

	'>'            reduce using rule 4
	'{'            shift, and enter state 7
	'['            shift, and enter state 8
	inline         shift, and enter state 9
	newpar         shift, and enter state 10
	space          shift, and enter state 11
	symbol         shift, and enter state 12

	Typing         goto state 51
	Typing1        goto state 4
	Typingbit      goto state 5
	Kailua         goto state 6

State 15

	Prefixexp -> Var .                                  (rule 83)

	and            reduce using rule 83
	break          reduce using rule 83
	do             reduce using rule 83
	else           reduce using rule 83
	elseif         reduce using rule 83
	end            reduce using rule 83
	for            reduce using rule 83
	function       reduce using rule 83
	goto           reduce using rule 83
	if             reduce using rule 83
	local          reduce using rule 83
	or             reduce using rule 83
	repeat         reduce using rule 83
	return         reduce using rule 83
	then           reduce using rule 83
	until          reduce using rule 83
	while          reduce using rule 83
	'+'            reduce using rule 83
	'-'            reduce using rule 83
	'*'            reduce using rule 83
	'/'            reduce using rule 83
	'%'            reduce using rule 83
	'^'            reduce using rule 83
	'&'            reduce using rule 83
	'~'            reduce using rule 83
	'|'            reduce using rule 83
	'<<'           reduce using rule 83
	'>>'           reduce using rule 83
	'//'           reduce using rule 83
	'=='           reduce using rule 83
	'~='           reduce using rule 83
	'<='           reduce using rule 83
	'>='           reduce using rule 83
	'<'            reduce using rule 83
	'>'            reduce using rule 83
	'('            reduce using rule 83
	')'            reduce using rule 83
	'{'            reduce using rule 83
	'}'            reduce using rule 83
	'['            reduce using rule 83
	']'            reduce using rule 83
	'::'           reduce using rule 83
	';'            reduce using rule 83
	':'            reduce using rule 83
	','            reduce using rule 83
	'.'            reduce using rule 83
	'..'           reduce using rule 83
	'\''           reduce using rule 83
	'"'            reduce using rule 83
	ident          reduce using rule 83


State 16

	Var -> Ident .                                      (rule 58)

	and            reduce using rule 58
	break          reduce using rule 58
	do             reduce using rule 58
	else           reduce using rule 58
	elseif         reduce using rule 58
	end            reduce using rule 58
	for            reduce using rule 58
	function       reduce using rule 58
	goto           reduce using rule 58
	if             reduce using rule 58
	local          reduce using rule 58
	or             reduce using rule 58
	repeat         reduce using rule 58
	return         reduce using rule 58
	then           reduce using rule 58
	until          reduce using rule 58
	while          reduce using rule 58
	'+'            reduce using rule 58
	'-'            reduce using rule 58
	'*'            reduce using rule 58
	'/'            reduce using rule 58
	'%'            reduce using rule 58
	'^'            reduce using rule 58
	'&'            reduce using rule 58
	'~'            reduce using rule 58
	'|'            reduce using rule 58
	'<<'           reduce using rule 58
	'>>'           reduce using rule 58
	'//'           reduce using rule 58
	'=='           reduce using rule 58
	'~='           reduce using rule 58
	'<='           reduce using rule 58
	'>='           reduce using rule 58
	'<'            reduce using rule 58
	'>'            reduce using rule 58
	'='            reduce using rule 58
	'('            reduce using rule 58
	')'            reduce using rule 58
	'{'            reduce using rule 58
	'}'            reduce using rule 58
	'['            reduce using rule 58
	']'            reduce using rule 58
	'::'           reduce using rule 58
	';'            reduce using rule 58
	':'            reduce using rule 58
	','            reduce using rule 58
	'.'            reduce using rule 58
	'..'           reduce using rule 58
	'\''           reduce using rule 58
	'"'            reduce using rule 58
	ident          reduce using rule 58


State 17

	Var -> Prefixexp . '[' Exp ']'                      (rule 59)
	Var -> Prefixexp . '.' Ident                        (rule 60)
	Funccall -> Prefixexp . Args                        (rule 86)
	Funccall -> Prefixexp . ':' Ident Args              (rule 87)

	'<'            shift, and enter state 14
	'('            shift, and enter state 47
	'{'            shift, and enter state 37
	'['            shift, and enter state 48
	':'            shift, and enter state 49
	'.'            shift, and enter state 50
	'\''           shift, and enter state 39
	'"'            shift, and enter state 40

	Args           goto state 43
	TypingArgs     goto state 44
	Tableconstructorgoto state 45
	String         goto state 46

State 18

	%start_parseCall -> Funccall .                      (rule 1)
	Prefixexp -> Funccall .                             (rule 84)

	'<'            reduce using rule 84
	'('            reduce using rule 84
	'{'            reduce using rule 84
	'['            reduce using rule 84
	':'            reduce using rule 84
	'.'            reduce using rule 84
	'\''           reduce using rule 84
	'"'            reduce using rule 84
	%eof           accept


State 19

	Prefixexp -> '(' . Exp ')'                          (rule 85)

	false          shift, and enter state 28
	function       shift, and enter state 29
	nil            shift, and enter state 30
	not            shift, and enter state 31
	true           shift, and enter state 32
	'-'            shift, and enter state 33
	'#'            shift, and enter state 34
	'~'            shift, and enter state 35
	'<'            shift, and enter state 36
	'('            shift, and enter state 19
	'{'            shift, and enter state 37
	'...'          shift, and enter state 38
	'\''           shift, and enter state 39
	'"'            shift, and enter state 40
	ident          shift, and enter state 20
	int            shift, and enter state 41
	float          shift, and enter state 42

	Var            goto state 15
	Ident          goto state 16
	Exp            goto state 22
	Prefixexp      goto state 23
	Funccall       goto state 24
	Tableconstructorgoto state 25
	Unop           goto state 26
	String         goto state 27

State 20

	Ident -> ident .                                    (rule 64)

	and            reduce using rule 64
	break          reduce using rule 64
	do             reduce using rule 64
	else           reduce using rule 64
	elseif         reduce using rule 64
	end            reduce using rule 64
	for            reduce using rule 64
	function       reduce using rule 64
	goto           reduce using rule 64
	if             reduce using rule 64
	in             reduce using rule 64
	local          reduce using rule 64
	or             reduce using rule 64
	repeat         reduce using rule 64
	return         reduce using rule 64
	then           reduce using rule 64
	until          reduce using rule 64
	while          reduce using rule 64
	'+'            reduce using rule 64
	'-'            reduce using rule 64
	'*'            reduce using rule 64
	'/'            reduce using rule 64
	'%'            reduce using rule 64
	'^'            reduce using rule 64
	'&'            reduce using rule 64
	'~'            reduce using rule 64
	'|'            reduce using rule 64
	'<<'           reduce using rule 64
	'>>'           reduce using rule 64
	'//'           reduce using rule 64
	'=='           reduce using rule 64
	'~='           reduce using rule 64
	'<='           reduce using rule 64
	'>='           reduce using rule 64
	'<'            reduce using rule 64
	'>'            reduce using rule 64
	'='            reduce using rule 64
	'('            reduce using rule 64
	')'            reduce using rule 64
	'{'            reduce using rule 64
	'}'            reduce using rule 64
	'['            reduce using rule 64
	']'            reduce using rule 64
	'::'           reduce using rule 64
	';'            reduce using rule 64
	':'            reduce using rule 64
	','            reduce using rule 64
	'.'            reduce using rule 64
	'..'           reduce using rule 64
	'\''           reduce using rule 64
	'"'            reduce using rule 64
	ident          reduce using rule 64


State 21

	%start_parseTyping -> Typing .                      (rule 0)

	%eof           accept


State 22

	Exp -> Exp . Binop Exp                              (rule 81)
	Prefixexp -> '(' Exp . ')'                          (rule 85)

	and            shift, and enter state 130
	or             shift, and enter state 131
	'+'            shift, and enter state 132
	'-'            shift, and enter state 133
	'*'            shift, and enter state 134
	'/'            shift, and enter state 135
	'%'            shift, and enter state 136
	'^'            shift, and enter state 137
	'&'            shift, and enter state 138
	'~'            shift, and enter state 139
	'|'            shift, and enter state 140
	'<<'           shift, and enter state 141
	'>>'           shift, and enter state 142
	'//'           shift, and enter state 143
	'=='           shift, and enter state 144
	'~='           shift, and enter state 145
	'<='           shift, and enter state 146
	'>='           shift, and enter state 147
	'<'            shift, and enter state 148
	'>'            shift, and enter state 149
	')'            shift, and enter state 150
	'..'           shift, and enter state 151

	Binop          goto state 129

State 23

	Var -> Prefixexp . '[' Exp ']'                      (rule 59)
	Var -> Prefixexp . '.' Ident                        (rule 60)
	Exp -> Prefixexp .                                  (rule 78)
	Funccall -> Prefixexp . Args                        (rule 86)
	Funccall -> Prefixexp . ':' Ident Args              (rule 87)

	and            reduce using rule 78
	break          reduce using rule 78
	do             reduce using rule 78
	else           reduce using rule 78
	elseif         reduce using rule 78
	end            reduce using rule 78
	for            reduce using rule 78
	function       reduce using rule 78
	goto           reduce using rule 78
	if             reduce using rule 78
	local          reduce using rule 78
	or             reduce using rule 78
	repeat         reduce using rule 78
	return         reduce using rule 78
	then           reduce using rule 78
	until          reduce using rule 78
	while          reduce using rule 78
	'+'            reduce using rule 78
	'-'            reduce using rule 78
	'*'            reduce using rule 78
	'/'            reduce using rule 78
	'%'            reduce using rule 78
	'^'            reduce using rule 78
	'&'            reduce using rule 78
	'~'            reduce using rule 78
	'|'            reduce using rule 78
	'<<'           reduce using rule 78
	'>>'           reduce using rule 78
	'//'           reduce using rule 78
	'=='           reduce using rule 78
	'~='           reduce using rule 78
	'<='           reduce using rule 78
	'>='           reduce using rule 78
	'<'            shift, and enter state 14
			(reduce using rule 78)

	'>'            reduce using rule 78
	'('            shift, and enter state 47
			(reduce using rule 78)

	')'            reduce using rule 78
	'{'            shift, and enter state 37
	'}'            reduce using rule 78
	'['            shift, and enter state 48
	']'            reduce using rule 78
	'::'           reduce using rule 78
	';'            reduce using rule 78
	':'            shift, and enter state 49
	','            reduce using rule 78
	'.'            shift, and enter state 50
	'..'           reduce using rule 78
	'\''           shift, and enter state 39
	'"'            shift, and enter state 40
	ident          reduce using rule 78

	Args           goto state 43
	TypingArgs     goto state 44
	Tableconstructorgoto state 45
	String         goto state 46

State 24

	Prefixexp -> Funccall .                             (rule 84)

	and            reduce using rule 84
	break          reduce using rule 84
	do             reduce using rule 84
	else           reduce using rule 84
	elseif         reduce using rule 84
	end            reduce using rule 84
	for            reduce using rule 84
	function       reduce using rule 84
	goto           reduce using rule 84
	if             reduce using rule 84
	local          reduce using rule 84
	or             reduce using rule 84
	repeat         reduce using rule 84
	return         reduce using rule 84
	then           reduce using rule 84
	until          reduce using rule 84
	while          reduce using rule 84
	'+'            reduce using rule 84
	'-'            reduce using rule 84
	'*'            reduce using rule 84
	'/'            reduce using rule 84
	'%'            reduce using rule 84
	'^'            reduce using rule 84
	'&'            reduce using rule 84
	'~'            reduce using rule 84
	'|'            reduce using rule 84
	'<<'           reduce using rule 84
	'>>'           reduce using rule 84
	'//'           reduce using rule 84
	'=='           reduce using rule 84
	'~='           reduce using rule 84
	'<='           reduce using rule 84
	'>='           reduce using rule 84
	'<'            reduce using rule 84
	'>'            reduce using rule 84
	'('            reduce using rule 84
	')'            reduce using rule 84
	'{'            reduce using rule 84
	'}'            reduce using rule 84
	'['            reduce using rule 84
	']'            reduce using rule 84
	'::'           reduce using rule 84
	';'            reduce using rule 84
	':'            reduce using rule 84
	','            reduce using rule 84
	'.'            reduce using rule 84
	'..'           reduce using rule 84
	'\''           reduce using rule 84
	'"'            reduce using rule 84
	ident          reduce using rule 84


State 25

	Exp -> Tableconstructor .                           (rule 79)

	and            reduce using rule 79
	break          reduce using rule 79
	do             reduce using rule 79
	else           reduce using rule 79
	elseif         reduce using rule 79
	end            reduce using rule 79
	for            reduce using rule 79
	function       reduce using rule 79
	goto           reduce using rule 79
	if             reduce using rule 79
	local          reduce using rule 79
	or             reduce using rule 79
	repeat         reduce using rule 79
	return         reduce using rule 79
	then           reduce using rule 79
	until          reduce using rule 79
	while          reduce using rule 79
	'+'            reduce using rule 79
	'-'            reduce using rule 79
	'*'            reduce using rule 79
	'/'            reduce using rule 79
	'%'            reduce using rule 79
	'^'            reduce using rule 79
	'&'            reduce using rule 79
	'~'            reduce using rule 79
	'|'            reduce using rule 79
	'<<'           reduce using rule 79
	'>>'           reduce using rule 79
	'//'           reduce using rule 79
	'=='           reduce using rule 79
	'~='           reduce using rule 79
	'<='           reduce using rule 79
	'>='           reduce using rule 79
	'<'            reduce using rule 79
	'>'            reduce using rule 79
	'('            reduce using rule 79
	')'            reduce using rule 79
	'}'            reduce using rule 79
	']'            reduce using rule 79
	'::'           reduce using rule 79
	';'            reduce using rule 79
	','            reduce using rule 79
	'..'           reduce using rule 79
	ident          reduce using rule 79


State 26

	Exp -> Unop . Exp                                   (rule 82)

	false          shift, and enter state 28
	function       shift, and enter state 29
	nil            shift, and enter state 30
	not            shift, and enter state 31
	true           shift, and enter state 32
	'-'            shift, and enter state 33
	'#'            shift, and enter state 34
	'~'            shift, and enter state 35
	'<'            shift, and enter state 36
	'('            shift, and enter state 19
	'{'            shift, and enter state 37
	'...'          shift, and enter state 38
	'\''           shift, and enter state 39
	'"'            shift, and enter state 40
	ident          shift, and enter state 20
	int            shift, and enter state 41
	float          shift, and enter state 42

	Var            goto state 15
	Ident          goto state 16
	Exp            goto state 128
	Prefixexp      goto state 23
	Funccall       goto state 24
	Tableconstructorgoto state 25
	Unop           goto state 26
	String         goto state 27

State 27

	Exp -> String .                                     (rule 75)

	and            reduce using rule 75
	break          reduce using rule 75
	do             reduce using rule 75
	else           reduce using rule 75
	elseif         reduce using rule 75
	end            reduce using rule 75
	for            reduce using rule 75
	function       reduce using rule 75
	goto           reduce using rule 75
	if             reduce using rule 75
	local          reduce using rule 75
	or             reduce using rule 75
	repeat         reduce using rule 75
	return         reduce using rule 75
	then           reduce using rule 75
	until          reduce using rule 75
	while          reduce using rule 75
	'+'            reduce using rule 75
	'-'            reduce using rule 75
	'*'            reduce using rule 75
	'/'            reduce using rule 75
	'%'            reduce using rule 75
	'^'            reduce using rule 75
	'&'            reduce using rule 75
	'~'            reduce using rule 75
	'|'            reduce using rule 75
	'<<'           reduce using rule 75
	'>>'           reduce using rule 75
	'//'           reduce using rule 75
	'=='           reduce using rule 75
	'~='           reduce using rule 75
	'<='           reduce using rule 75
	'>='           reduce using rule 75
	'<'            reduce using rule 75
	'>'            reduce using rule 75
	'('            reduce using rule 75
	')'            reduce using rule 75
	'}'            reduce using rule 75
	']'            reduce using rule 75
	'::'           reduce using rule 75
	';'            reduce using rule 75
	','            reduce using rule 75
	'..'           reduce using rule 75
	ident          reduce using rule 75


State 28

	Exp -> false .                                      (rule 71)

	and            reduce using rule 71
	break          reduce using rule 71
	do             reduce using rule 71
	else           reduce using rule 71
	elseif         reduce using rule 71
	end            reduce using rule 71
	for            reduce using rule 71
	function       reduce using rule 71
	goto           reduce using rule 71
	if             reduce using rule 71
	local          reduce using rule 71
	or             reduce using rule 71
	repeat         reduce using rule 71
	return         reduce using rule 71
	then           reduce using rule 71
	until          reduce using rule 71
	while          reduce using rule 71
	'+'            reduce using rule 71
	'-'            reduce using rule 71
	'*'            reduce using rule 71
	'/'            reduce using rule 71
	'%'            reduce using rule 71
	'^'            reduce using rule 71
	'&'            reduce using rule 71
	'~'            reduce using rule 71
	'|'            reduce using rule 71
	'<<'           reduce using rule 71
	'>>'           reduce using rule 71
	'//'           reduce using rule 71
	'=='           reduce using rule 71
	'~='           reduce using rule 71
	'<='           reduce using rule 71
	'>='           reduce using rule 71
	'<'            reduce using rule 71
	'>'            reduce using rule 71
	'('            reduce using rule 71
	')'            reduce using rule 71
	'}'            reduce using rule 71
	']'            reduce using rule 71
	'::'           reduce using rule 71
	';'            reduce using rule 71
	','            reduce using rule 71
	'..'           reduce using rule 71
	ident          reduce using rule 71


State 29

	Exp -> function . Funcbody                          (rule 77)

	'('            shift, and enter state 127

	Funcbody       goto state 126

State 30

	Exp -> nil .                                        (rule 70)

	and            reduce using rule 70
	break          reduce using rule 70
	do             reduce using rule 70
	else           reduce using rule 70
	elseif         reduce using rule 70
	end            reduce using rule 70
	for            reduce using rule 70
	function       reduce using rule 70
	goto           reduce using rule 70
	if             reduce using rule 70
	local          reduce using rule 70
	or             reduce using rule 70
	repeat         reduce using rule 70
	return         reduce using rule 70
	then           reduce using rule 70
	until          reduce using rule 70
	while          reduce using rule 70
	'+'            reduce using rule 70
	'-'            reduce using rule 70
	'*'            reduce using rule 70
	'/'            reduce using rule 70
	'%'            reduce using rule 70
	'^'            reduce using rule 70
	'&'            reduce using rule 70
	'~'            reduce using rule 70
	'|'            reduce using rule 70
	'<<'           reduce using rule 70
	'>>'           reduce using rule 70
	'//'           reduce using rule 70
	'=='           reduce using rule 70
	'~='           reduce using rule 70
	'<='           reduce using rule 70
	'>='           reduce using rule 70
	'<'            reduce using rule 70
	'>'            reduce using rule 70
	'('            reduce using rule 70
	')'            reduce using rule 70
	'}'            reduce using rule 70
	']'            reduce using rule 70
	'::'           reduce using rule 70
	';'            reduce using rule 70
	','            reduce using rule 70
	'..'           reduce using rule 70
	ident          reduce using rule 70


State 31

	Unop -> not .                                       (rule 130)

	false          reduce using rule 130
	function       reduce using rule 130
	nil            reduce using rule 130
	not            reduce using rule 130
	true           reduce using rule 130
	'-'            reduce using rule 130
	'#'            reduce using rule 130
	'~'            reduce using rule 130
	'<'            reduce using rule 130
	'('            reduce using rule 130
	'{'            reduce using rule 130
	'...'          reduce using rule 130
	'\''           reduce using rule 130
	'"'            reduce using rule 130
	ident          reduce using rule 130
	int            reduce using rule 130
	float          reduce using rule 130


State 32

	Exp -> true .                                       (rule 72)

	and            reduce using rule 72
	break          reduce using rule 72
	do             reduce using rule 72
	else           reduce using rule 72
	elseif         reduce using rule 72
	end            reduce using rule 72
	for            reduce using rule 72
	function       reduce using rule 72
	goto           reduce using rule 72
	if             reduce using rule 72
	local          reduce using rule 72
	or             reduce using rule 72
	repeat         reduce using rule 72
	return         reduce using rule 72
	then           reduce using rule 72
	until          reduce using rule 72
	while          reduce using rule 72
	'+'            reduce using rule 72
	'-'            reduce using rule 72
	'*'            reduce using rule 72
	'/'            reduce using rule 72
	'%'            reduce using rule 72
	'^'            reduce using rule 72
	'&'            reduce using rule 72
	'~'            reduce using rule 72
	'|'            reduce using rule 72
	'<<'           reduce using rule 72
	'>>'           reduce using rule 72
	'//'           reduce using rule 72
	'=='           reduce using rule 72
	'~='           reduce using rule 72
	'<='           reduce using rule 72
	'>='           reduce using rule 72
	'<'            reduce using rule 72
	'>'            reduce using rule 72
	'('            reduce using rule 72
	')'            reduce using rule 72
	'}'            reduce using rule 72
	']'            reduce using rule 72
	'::'           reduce using rule 72
	';'            reduce using rule 72
	','            reduce using rule 72
	'..'           reduce using rule 72
	ident          reduce using rule 72


State 33

	Unop -> '-' .                                       (rule 129)

	false          reduce using rule 129
	function       reduce using rule 129
	nil            reduce using rule 129
	not            reduce using rule 129
	true           reduce using rule 129
	'-'            reduce using rule 129
	'#'            reduce using rule 129
	'~'            reduce using rule 129
	'<'            reduce using rule 129
	'('            reduce using rule 129
	'{'            reduce using rule 129
	'...'          reduce using rule 129
	'\''           reduce using rule 129
	'"'            reduce using rule 129
	ident          reduce using rule 129
	int            reduce using rule 129
	float          reduce using rule 129


State 34

	Unop -> '#' .                                       (rule 131)

	false          reduce using rule 131
	function       reduce using rule 131
	nil            reduce using rule 131
	not            reduce using rule 131
	true           reduce using rule 131
	'-'            reduce using rule 131
	'#'            reduce using rule 131
	'~'            reduce using rule 131
	'<'            reduce using rule 131
	'('            reduce using rule 131
	'{'            reduce using rule 131
	'...'          reduce using rule 131
	'\''           reduce using rule 131
	'"'            reduce using rule 131
	ident          reduce using rule 131
	int            reduce using rule 131
	float          reduce using rule 131


State 35

	Unop -> '~' .                                       (rule 132)

	false          reduce using rule 132
	function       reduce using rule 132
	nil            reduce using rule 132
	not            reduce using rule 132
	true           reduce using rule 132
	'-'            reduce using rule 132
	'#'            reduce using rule 132
	'~'            reduce using rule 132
	'<'            reduce using rule 132
	'('            reduce using rule 132
	'{'            reduce using rule 132
	'...'          reduce using rule 132
	'\''           reduce using rule 132
	'"'            reduce using rule 132
	ident          reduce using rule 132
	int            reduce using rule 132
	float          reduce using rule 132


State 36

	Exp -> '<' . Typing '>'                             (rule 80)

	'>'            reduce using rule 4
	'{'            shift, and enter state 7
	'['            shift, and enter state 8
	inline         shift, and enter state 9
	newpar         shift, and enter state 10
	space          shift, and enter state 11
	symbol         shift, and enter state 12

	Typing         goto state 125
	Typing1        goto state 4
	Typingbit      goto state 5
	Kailua         goto state 6

State 37

	Tableconstructor -> '{' . '}'                       (rule 98)
	Tableconstructor -> '{' . Fieldlist '}'             (rule 99)
	Tableconstructor -> '{' . Fieldlist ',' '}'         (rule 100)
	Tableconstructor -> '{' . Fieldlist ';' '}'         (rule 101)

	false          shift, and enter state 28
	function       shift, and enter state 29
	nil            shift, and enter state 30
	not            shift, and enter state 31
	true           shift, and enter state 32
	'-'            shift, and enter state 33
	'#'            shift, and enter state 34
	'~'            shift, and enter state 35
	'<'            shift, and enter state 36
	'('            shift, and enter state 19
	'{'            shift, and enter state 37
	'}'            shift, and enter state 123
	'['            shift, and enter state 124
	'...'          shift, and enter state 38
	'\''           shift, and enter state 39
	'"'            shift, and enter state 40
	ident          shift, and enter state 20
	int            shift, and enter state 41
	float          shift, and enter state 42

	Var            goto state 15
	Ident          goto state 119
	Exp            goto state 120
	Prefixexp      goto state 23
	Funccall       goto state 24
	Tableconstructorgoto state 25
	Fieldlist      goto state 121
	Field          goto state 122
	Unop           goto state 26
	String         goto state 27

State 38

	Exp -> '...' .                                      (rule 76)

	and            reduce using rule 76
	break          reduce using rule 76
	do             reduce using rule 76
	else           reduce using rule 76
	elseif         reduce using rule 76
	end            reduce using rule 76
	for            reduce using rule 76
	function       reduce using rule 76
	goto           reduce using rule 76
	if             reduce using rule 76
	local          reduce using rule 76
	or             reduce using rule 76
	repeat         reduce using rule 76
	return         reduce using rule 76
	then           reduce using rule 76
	until          reduce using rule 76
	while          reduce using rule 76
	'+'            reduce using rule 76
	'-'            reduce using rule 76
	'*'            reduce using rule 76
	'/'            reduce using rule 76
	'%'            reduce using rule 76
	'^'            reduce using rule 76
	'&'            reduce using rule 76
	'~'            reduce using rule 76
	'|'            reduce using rule 76
	'<<'           reduce using rule 76
	'>>'           reduce using rule 76
	'//'           reduce using rule 76
	'=='           reduce using rule 76
	'~='           reduce using rule 76
	'<='           reduce using rule 76
	'>='           reduce using rule 76
	'<'            reduce using rule 76
	'>'            reduce using rule 76
	'('            reduce using rule 76
	')'            reduce using rule 76
	'}'            reduce using rule 76
	']'            reduce using rule 76
	'::'           reduce using rule 76
	';'            reduce using rule 76
	','            reduce using rule 76
	'..'           reduce using rule 76
	ident          reduce using rule 76


State 39

	String -> '\'' . string '\''                        (rule 133)

	string         shift, and enter state 118


State 40

	String -> '"' . string '"'                          (rule 134)

	string         shift, and enter state 117


State 41

	Exp -> int .                                        (rule 73)

	and            reduce using rule 73
	break          reduce using rule 73
	do             reduce using rule 73
	else           reduce using rule 73
	elseif         reduce using rule 73
	end            reduce using rule 73
	for            reduce using rule 73
	function       reduce using rule 73
	goto           reduce using rule 73
	if             reduce using rule 73
	local          reduce using rule 73
	or             reduce using rule 73
	repeat         reduce using rule 73
	return         reduce using rule 73
	then           reduce using rule 73
	until          reduce using rule 73
	while          reduce using rule 73
	'+'            reduce using rule 73
	'-'            reduce using rule 73
	'*'            reduce using rule 73
	'/'            reduce using rule 73
	'%'            reduce using rule 73
	'^'            reduce using rule 73
	'&'            reduce using rule 73
	'~'            reduce using rule 73
	'|'            reduce using rule 73
	'<<'           reduce using rule 73
	'>>'           reduce using rule 73
	'//'           reduce using rule 73
	'=='           reduce using rule 73
	'~='           reduce using rule 73
	'<='           reduce using rule 73
	'>='           reduce using rule 73
	'<'            reduce using rule 73
	'>'            reduce using rule 73
	'('            reduce using rule 73
	')'            reduce using rule 73
	'}'            reduce using rule 73
	']'            reduce using rule 73
	'::'           reduce using rule 73
	';'            reduce using rule 73
	','            reduce using rule 73
	'..'           reduce using rule 73
	ident          reduce using rule 73


State 42

	Exp -> float .                                      (rule 74)

	and            reduce using rule 74
	break          reduce using rule 74
	do             reduce using rule 74
	else           reduce using rule 74
	elseif         reduce using rule 74
	end            reduce using rule 74
	for            reduce using rule 74
	function       reduce using rule 74
	goto           reduce using rule 74
	if             reduce using rule 74
	local          reduce using rule 74
	or             reduce using rule 74
	repeat         reduce using rule 74
	return         reduce using rule 74
	then           reduce using rule 74
	until          reduce using rule 74
	while          reduce using rule 74
	'+'            reduce using rule 74
	'-'            reduce using rule 74
	'*'            reduce using rule 74
	'/'            reduce using rule 74
	'%'            reduce using rule 74
	'^'            reduce using rule 74
	'&'            reduce using rule 74
	'~'            reduce using rule 74
	'|'            reduce using rule 74
	'<<'           reduce using rule 74
	'>>'           reduce using rule 74
	'//'           reduce using rule 74
	'=='           reduce using rule 74
	'~='           reduce using rule 74
	'<='           reduce using rule 74
	'>='           reduce using rule 74
	'<'            reduce using rule 74
	'>'            reduce using rule 74
	'('            reduce using rule 74
	')'            reduce using rule 74
	'}'            reduce using rule 74
	']'            reduce using rule 74
	'::'           reduce using rule 74
	';'            reduce using rule 74
	','            reduce using rule 74
	'..'           reduce using rule 74
	ident          reduce using rule 74


State 43

	Funccall -> Prefixexp Args .                        (rule 86)

	and            reduce using rule 86
	break          reduce using rule 86
	do             reduce using rule 86
	else           reduce using rule 86
	elseif         reduce using rule 86
	end            reduce using rule 86
	for            reduce using rule 86
	function       reduce using rule 86
	goto           reduce using rule 86
	if             reduce using rule 86
	local          reduce using rule 86
	or             reduce using rule 86
	repeat         reduce using rule 86
	return         reduce using rule 86
	then           reduce using rule 86
	until          reduce using rule 86
	while          reduce using rule 86
	'+'            reduce using rule 86
	'-'            reduce using rule 86
	'*'            reduce using rule 86
	'/'            reduce using rule 86
	'%'            reduce using rule 86
	'^'            reduce using rule 86
	'&'            reduce using rule 86
	'~'            reduce using rule 86
	'|'            reduce using rule 86
	'<<'           reduce using rule 86
	'>>'           reduce using rule 86
	'//'           reduce using rule 86
	'=='           reduce using rule 86
	'~='           reduce using rule 86
	'<='           reduce using rule 86
	'>='           reduce using rule 86
	'<'            reduce using rule 86
	'>'            reduce using rule 86
	'('            reduce using rule 86
	')'            reduce using rule 86
	'{'            reduce using rule 86
	'}'            reduce using rule 86
	'['            reduce using rule 86
	']'            reduce using rule 86
	'::'           reduce using rule 86
	';'            reduce using rule 86
	':'            reduce using rule 86
	','            reduce using rule 86
	'.'            reduce using rule 86
	'..'           reduce using rule 86
	'\''           reduce using rule 86
	'"'            reduce using rule 86
	ident          reduce using rule 86
	%eof           reduce using rule 86


State 44

	Args -> TypingArgs .                                (rule 91)

	and            reduce using rule 91
	break          reduce using rule 91
	do             reduce using rule 91
	else           reduce using rule 91
	elseif         reduce using rule 91
	end            reduce using rule 91
	for            reduce using rule 91
	function       reduce using rule 91
	goto           reduce using rule 91
	if             reduce using rule 91
	local          reduce using rule 91
	or             reduce using rule 91
	repeat         reduce using rule 91
	return         reduce using rule 91
	then           reduce using rule 91
	until          reduce using rule 91
	while          reduce using rule 91
	'+'            reduce using rule 91
	'-'            reduce using rule 91
	'*'            reduce using rule 91
	'/'            reduce using rule 91
	'%'            reduce using rule 91
	'^'            reduce using rule 91
	'&'            reduce using rule 91
	'~'            reduce using rule 91
	'|'            reduce using rule 91
	'<<'           reduce using rule 91
	'>>'           reduce using rule 91
	'//'           reduce using rule 91
	'=='           reduce using rule 91
	'~='           reduce using rule 91
	'<='           reduce using rule 91
	'>='           reduce using rule 91
	'<'            reduce using rule 91
	'>'            reduce using rule 91
	'('            reduce using rule 91
	')'            reduce using rule 91
	'{'            reduce using rule 91
	'}'            reduce using rule 91
	'['            reduce using rule 91
	']'            reduce using rule 91
	'::'           reduce using rule 91
	';'            reduce using rule 91
	':'            reduce using rule 91
	','            reduce using rule 91
	'.'            reduce using rule 91
	'..'           reduce using rule 91
	'\''           reduce using rule 91
	'"'            reduce using rule 91
	ident          reduce using rule 91
	%eof           reduce using rule 91


State 45

	Args -> Tableconstructor .                          (rule 89)

	and            reduce using rule 89
	break          reduce using rule 89
	do             reduce using rule 89
	else           reduce using rule 89
	elseif         reduce using rule 89
	end            reduce using rule 89
	for            reduce using rule 89
	function       reduce using rule 89
	goto           reduce using rule 89
	if             reduce using rule 89
	local          reduce using rule 89
	or             reduce using rule 89
	repeat         reduce using rule 89
	return         reduce using rule 89
	then           reduce using rule 89
	until          reduce using rule 89
	while          reduce using rule 89
	'+'            reduce using rule 89
	'-'            reduce using rule 89
	'*'            reduce using rule 89
	'/'            reduce using rule 89
	'%'            reduce using rule 89
	'^'            reduce using rule 89
	'&'            reduce using rule 89
	'~'            reduce using rule 89
	'|'            reduce using rule 89
	'<<'           reduce using rule 89
	'>>'           reduce using rule 89
	'//'           reduce using rule 89
	'=='           reduce using rule 89
	'~='           reduce using rule 89
	'<='           reduce using rule 89
	'>='           reduce using rule 89
	'<'            reduce using rule 89
	'>'            reduce using rule 89
	'('            reduce using rule 89
	')'            reduce using rule 89
	'{'            reduce using rule 89
	'}'            reduce using rule 89
	'['            reduce using rule 89
	']'            reduce using rule 89
	'::'           reduce using rule 89
	';'            reduce using rule 89
	':'            reduce using rule 89
	','            reduce using rule 89
	'.'            reduce using rule 89
	'..'           reduce using rule 89
	'\''           reduce using rule 89
	'"'            reduce using rule 89
	ident          reduce using rule 89
	%eof           reduce using rule 89


State 46

	Args -> String .                                    (rule 90)

	and            reduce using rule 90
	break          reduce using rule 90
	do             reduce using rule 90
	else           reduce using rule 90
	elseif         reduce using rule 90
	end            reduce using rule 90
	for            reduce using rule 90
	function       reduce using rule 90
	goto           reduce using rule 90
	if             reduce using rule 90
	local          reduce using rule 90
	or             reduce using rule 90
	repeat         reduce using rule 90
	return         reduce using rule 90
	then           reduce using rule 90
	until          reduce using rule 90
	while          reduce using rule 90
	'+'            reduce using rule 90
	'-'            reduce using rule 90
	'*'            reduce using rule 90
	'/'            reduce using rule 90
	'%'            reduce using rule 90
	'^'            reduce using rule 90
	'&'            reduce using rule 90
	'~'            reduce using rule 90
	'|'            reduce using rule 90
	'<<'           reduce using rule 90
	'>>'           reduce using rule 90
	'//'           reduce using rule 90
	'=='           reduce using rule 90
	'~='           reduce using rule 90
	'<='           reduce using rule 90
	'>='           reduce using rule 90
	'<'            reduce using rule 90
	'>'            reduce using rule 90
	'('            reduce using rule 90
	')'            reduce using rule 90
	'{'            reduce using rule 90
	'}'            reduce using rule 90
	'['            reduce using rule 90
	']'            reduce using rule 90
	'::'           reduce using rule 90
	';'            reduce using rule 90
	':'            reduce using rule 90
	','            reduce using rule 90
	'.'            reduce using rule 90
	'..'           reduce using rule 90
	'\''           reduce using rule 90
	'"'            reduce using rule 90
	ident          reduce using rule 90
	%eof           reduce using rule 90


State 47

	Args -> '(' . Explist ')'                           (rule 88)

	false          shift, and enter state 28
	function       shift, and enter state 29
	nil            shift, and enter state 30
	not            shift, and enter state 31
	true           shift, and enter state 32
	'-'            shift, and enter state 33
	'#'            shift, and enter state 34
	'~'            shift, and enter state 35
	'<'            shift, and enter state 36
	'('            shift, and enter state 19
	')'            reduce using rule 66
	'{'            shift, and enter state 37
	'...'          shift, and enter state 38
	'\''           shift, and enter state 39
	'"'            shift, and enter state 40
	ident          shift, and enter state 20
	int            shift, and enter state 41
	float          shift, and enter state 42

	Var            goto state 15
	Ident          goto state 16
	Explist        goto state 116
	Explist11      goto state 84
	Exp            goto state 85
	Prefixexp      goto state 23
	Funccall       goto state 24
	Tableconstructorgoto state 25
	Unop           goto state 26
	String         goto state 27

State 48

	Var -> Prefixexp '[' . Exp ']'                      (rule 59)

	false          shift, and enter state 28
	function       shift, and enter state 29
	nil            shift, and enter state 30
	not            shift, and enter state 31
	true           shift, and enter state 32
	'-'            shift, and enter state 33
	'#'            shift, and enter state 34
	'~'            shift, and enter state 35
	'<'            shift, and enter state 36
	'('            shift, and enter state 19
	'{'            shift, and enter state 37
	'...'          shift, and enter state 38
	'\''           shift, and enter state 39
	'"'            shift, and enter state 40
	ident          shift, and enter state 20
	int            shift, and enter state 41
	float          shift, and enter state 42

	Var            goto state 15
	Ident          goto state 16
	Exp            goto state 115
	Prefixexp      goto state 23
	Funccall       goto state 24
	Tableconstructorgoto state 25
	Unop           goto state 26
	String         goto state 27

State 49

	Funccall -> Prefixexp ':' . Ident Args              (rule 87)

	ident          shift, and enter state 20

	Ident          goto state 114

State 50

	Var -> Prefixexp '.' . Ident                        (rule 60)

	ident          shift, and enter state 20

	Ident          goto state 113

State 51

	TypingArgs -> '<' Typing . '>' TypingArgs           (rule 92)
	TypingArgs -> '<' Typing . '>'                      (rule 93)

	'>'            shift, and enter state 112


State 52

	Typing1 -> '[' Math . ']' Typing1                   (rule 7)

	']'            shift, and enter state 111


State 53

	Math -> Mathbit . Math                              (rule 12)
	Mathbit -> Mathbit . Mathbinop Mathbit              (rule 16)

	'^'            shift, and enter state 109
	'_'            shift, and enter state 110
	'{'            shift, and enter state 55
	'}'            reduce using rule 11
	']'            reduce using rule 11
	inline         shift, and enter state 9
	symbol         shift, and enter state 56

	Math           goto state 107
	Mathbit        goto state 53
	Mathbinop      goto state 108
	Kailua         goto state 54

State 54

	Math -> Kailua . Math                               (rule 13)

	'{'            shift, and enter state 55
	'}'            reduce using rule 11
	']'            reduce using rule 11
	inline         shift, and enter state 9
	symbol         shift, and enter state 56

	Math           goto state 106
	Mathbit        goto state 53
	Kailua         goto state 54

State 55

	Mathbit -> '{' . Math '}'                           (rule 15)
	Kailua -> '{' . Block '}'                           (rule 20)

	break          shift, and enter state 67
	do             shift, and enter state 68
	for            shift, and enter state 69
	function       shift, and enter state 70
	goto           shift, and enter state 71
	if             shift, and enter state 72
	local          shift, and enter state 73
	repeat         shift, and enter state 74
	return         shift, and enter state 75
	while          shift, and enter state 76
	'('            shift, and enter state 19
	'{'            shift, and enter state 55
	'}'            reduce using rule 22
			(reduce using rule 11)

	'::'           shift, and enter state 77
	';'            shift, and enter state 78
	ident          shift, and enter state 20
	inline         shift, and enter state 9
	symbol         shift, and enter state 56

	Math           goto state 105
	Mathbit        goto state 53
	Kailua         goto state 54
	Block          goto state 57
	Stat           goto state 58
	If             goto state 59
	If1            goto state 60
	Retstat        goto state 61
	Label          goto state 62
	Varlist1       goto state 63
	Varlist11      goto state 64
	Var            goto state 65
	Ident          goto state 16
	Prefixexp      goto state 17
	Funccall       goto state 66

State 56

	Mathbit -> symbol .                                 (rule 14)

	'^'            reduce using rule 14
	'_'            reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	']'            reduce using rule 14
	inline         reduce using rule 14
	symbol         reduce using rule 14


State 57

	Kailua -> '{' Block . '}'                           (rule 20)

	'}'            shift, and enter state 104


State 58

	Block -> Stat . Block                               (rule 23)

	break          shift, and enter state 67
	do             shift, and enter state 68
	else           reduce using rule 22
	elseif         reduce using rule 22
	end            reduce using rule 22
	for            shift, and enter state 69
	function       shift, and enter state 70
	goto           shift, and enter state 71
	if             shift, and enter state 72
	local          shift, and enter state 73
	repeat         shift, and enter state 74
	return         shift, and enter state 75
	until          reduce using rule 22
	while          shift, and enter state 76
	'('            shift, and enter state 19
	'}'            reduce using rule 22
	'::'           shift, and enter state 77
	';'            shift, and enter state 78
	ident          shift, and enter state 20

	Block          goto state 103
	Stat           goto state 58
	If             goto state 59
	If1            goto state 60
	Retstat        goto state 61
	Label          goto state 62
	Varlist1       goto state 63
	Varlist11      goto state 64
	Var            goto state 65
	Ident          goto state 16
	Prefixexp      goto state 17
	Funccall       goto state 66

State 59

	Stat -> If .                                        (rule 33)

	break          reduce using rule 33
	do             reduce using rule 33
	else           reduce using rule 33
	elseif         reduce using rule 33
	end            reduce using rule 33
	for            reduce using rule 33
	function       reduce using rule 33
	goto           reduce using rule 33
	if             reduce using rule 33
	local          reduce using rule 33
	repeat         reduce using rule 33
	return         reduce using rule 33
	until          reduce using rule 33
	while          reduce using rule 33
	'('            reduce using rule 33
	'}'            reduce using rule 33
	'::'           reduce using rule 33
	';'            reduce using rule 33
	ident          reduce using rule 33


State 60

	If -> If1 . end                                     (rule 41)
	If -> If1 . else Block end                          (rule 42)

	else           shift, and enter state 101
	end            shift, and enter state 102


State 61

	Block -> Retstat .                                  (rule 21)

	else           reduce using rule 21
	elseif         reduce using rule 21
	end            reduce using rule 21
	until          reduce using rule 21
	'}'            reduce using rule 21


State 62

	Stat -> Label .                                     (rule 27)

	break          reduce using rule 27
	do             reduce using rule 27
	else           reduce using rule 27
	elseif         reduce using rule 27
	end            reduce using rule 27
	for            reduce using rule 27
	function       reduce using rule 27
	goto           reduce using rule 27
	if             reduce using rule 27
	local          reduce using rule 27
	repeat         reduce using rule 27
	return         reduce using rule 27
	until          reduce using rule 27
	while          reduce using rule 27
	'('            reduce using rule 27
	'}'            reduce using rule 27
	'::'           reduce using rule 27
	';'            reduce using rule 27
	ident          reduce using rule 27


State 63

	Stat -> Varlist1 . '=' Explist1                     (rule 25)

	'='            shift, and enter state 100


State 64

	Varlist1 -> Varlist11 .                             (rule 55)

	'='            reduce using rule 55


State 65

	Varlist11 -> Var .                                  (rule 56)
	Varlist11 -> Var . ',' Varlist11                    (rule 57)
	Prefixexp -> Var .                                  (rule 83)

	'<'            reduce using rule 83
	'='            reduce using rule 56
	'('            reduce using rule 83
	'{'            reduce using rule 83
	'['            reduce using rule 83
	':'            reduce using rule 83
	','            shift, and enter state 99
	'.'            reduce using rule 83
	'\''           reduce using rule 83
	'"'            reduce using rule 83


State 66

	Stat -> Funccall .                                  (rule 26)
	Prefixexp -> Funccall .                             (rule 84)

	break          reduce using rule 26
	do             reduce using rule 26
	else           reduce using rule 26
	elseif         reduce using rule 26
	end            reduce using rule 26
	for            reduce using rule 26
	function       reduce using rule 26
	goto           reduce using rule 26
	if             reduce using rule 26
	local          reduce using rule 26
	repeat         reduce using rule 26
	return         reduce using rule 26
	until          reduce using rule 26
	while          reduce using rule 26
	'<'            reduce using rule 84
	'('            reduce using rule 84
			(reduce using rule 26)

	'{'            reduce using rule 84
	'}'            reduce using rule 26
	'['            reduce using rule 84
	'::'           reduce using rule 26
	';'            reduce using rule 26
	':'            reduce using rule 84
	'.'            reduce using rule 84
	'\''           reduce using rule 84
	'"'            reduce using rule 84
	ident          reduce using rule 26


State 67

	Stat -> break .                                     (rule 28)

	break          reduce using rule 28
	do             reduce using rule 28
	else           reduce using rule 28
	elseif         reduce using rule 28
	end            reduce using rule 28
	for            reduce using rule 28
	function       reduce using rule 28
	goto           reduce using rule 28
	if             reduce using rule 28
	local          reduce using rule 28
	repeat         reduce using rule 28
	return         reduce using rule 28
	until          reduce using rule 28
	while          reduce using rule 28
	'('            reduce using rule 28
	'}'            reduce using rule 28
	'::'           reduce using rule 28
	';'            reduce using rule 28
	ident          reduce using rule 28


State 68

	Stat -> do . Block end                              (rule 30)

	break          shift, and enter state 67
	do             shift, and enter state 68
	end            reduce using rule 22
	for            shift, and enter state 69
	function       shift, and enter state 70
	goto           shift, and enter state 71
	if             shift, and enter state 72
	local          shift, and enter state 73
	repeat         shift, and enter state 74
	return         shift, and enter state 75
	while          shift, and enter state 76
	'('            shift, and enter state 19
	'::'           shift, and enter state 77
	';'            shift, and enter state 78
	ident          shift, and enter state 20

	Block          goto state 98
	Stat           goto state 58
	If             goto state 59
	If1            goto state 60
	Retstat        goto state 61
	Label          goto state 62
	Varlist1       goto state 63
	Varlist11      goto state 64
	Var            goto state 65
	Ident          goto state 16
	Prefixexp      goto state 17
	Funccall       goto state 66

State 69

	Stat -> for . Ident '=' Exp ',' Exp do Block end    (rule 34)
	Stat -> for . Ident '=' Exp ',' Exp ',' Exp do Block end    (rule 35)
	Stat -> for . Identlist1 in Explist1 do Block end    (rule 36)

	ident          shift, and enter state 20

	Identlist1     goto state 96
	Identlist11    goto state 88
	Ident          goto state 97

State 70

	Stat -> function . Funcname Funcbody                (rule 37)

	ident          shift, and enter state 20

	Funcname       goto state 93
	Funcname1      goto state 94
	Ident          goto state 95

State 71

	Stat -> goto . Ident                                (rule 29)

	ident          shift, and enter state 20

	Ident          goto state 92

State 72

	If1 -> if . Exp then Block ElseIf                   (rule 43)
	If1 -> if . Exp then Block                          (rule 44)

	false          shift, and enter state 28
	function       shift, and enter state 29
	nil            shift, and enter state 30
	not            shift, and enter state 31
	true           shift, and enter state 32
	'-'            shift, and enter state 33
	'#'            shift, and enter state 34
	'~'            shift, and enter state 35
	'<'            shift, and enter state 36
	'('            shift, and enter state 19
	'{'            shift, and enter state 37
	'...'          shift, and enter state 38
	'\''           shift, and enter state 39
	'"'            shift, and enter state 40
	ident          shift, and enter state 20
	int            shift, and enter state 41
	float          shift, and enter state 42

	Var            goto state 15
	Ident          goto state 16
	Exp            goto state 91
	Prefixexp      goto state 23
	Funccall       goto state 24
	Tableconstructorgoto state 25
	Unop           goto state 26
	String         goto state 27

State 73

	Stat -> local . function Ident Funcbody             (rule 38)
	Stat -> local . Identlist1                          (rule 39)
	Stat -> local . Identlist1 '=' Explist              (rule 40)

	function       shift, and enter state 90
	ident          shift, and enter state 20

	Identlist1     goto state 87
	Identlist11    goto state 88
	Ident          goto state 89

State 74

	Stat -> repeat . Block until Exp                    (rule 32)

	break          shift, and enter state 67
	do             shift, and enter state 68
	for            shift, and enter state 69
	function       shift, and enter state 70
	goto           shift, and enter state 71
	if             shift, and enter state 72
	local          shift, and enter state 73
	repeat         shift, and enter state 74
	return         shift, and enter state 75
	until          reduce using rule 22
	while          shift, and enter state 76
	'('            shift, and enter state 19
	'::'           shift, and enter state 77
	';'            shift, and enter state 78
	ident          shift, and enter state 20

	Block          goto state 86
	Stat           goto state 58
	If             goto state 59
	If1            goto state 60
	Retstat        goto state 61
	Label          goto state 62
	Varlist1       goto state 63
	Varlist11      goto state 64
	Var            goto state 65
	Ident          goto state 16
	Prefixexp      goto state 17
	Funccall       goto state 66

State 75

	Retstat -> return . Explist                         (rule 48)
	Retstat -> return . Explist ';'                     (rule 49)

	else           reduce using rule 66
	elseif         reduce using rule 66
	end            reduce using rule 66
	false          shift, and enter state 28
	function       shift, and enter state 29
	nil            shift, and enter state 30
	not            shift, and enter state 31
	true           shift, and enter state 32
	until          reduce using rule 66
	'-'            shift, and enter state 33
	'#'            shift, and enter state 34
	'~'            shift, and enter state 35
	'<'            shift, and enter state 36
	'('            shift, and enter state 19
	'{'            shift, and enter state 37
	'}'            reduce using rule 66
	';'            reduce using rule 66
	'...'          shift, and enter state 38
	'\''           shift, and enter state 39
	'"'            shift, and enter state 40
	ident          shift, and enter state 20
	int            shift, and enter state 41
	float          shift, and enter state 42

	Var            goto state 15
	Ident          goto state 16
	Explist        goto state 83
	Explist11      goto state 84
	Exp            goto state 85
	Prefixexp      goto state 23
	Funccall       goto state 24
	Tableconstructorgoto state 25
	Unop           goto state 26
	String         goto state 27

State 76

	Stat -> while . Exp do Block end                    (rule 31)

	false          shift, and enter state 28
	function       shift, and enter state 29
	nil            shift, and enter state 30
	not            shift, and enter state 31
	true           shift, and enter state 32
	'-'            shift, and enter state 33
	'#'            shift, and enter state 34
	'~'            shift, and enter state 35
	'<'            shift, and enter state 36
	'('            shift, and enter state 19
	'{'            shift, and enter state 37
	'...'          shift, and enter state 38
	'\''           shift, and enter state 39
	'"'            shift, and enter state 40
	ident          shift, and enter state 20
	int            shift, and enter state 41
	float          shift, and enter state 42

	Var            goto state 15
	Ident          goto state 16
	Exp            goto state 82
	Prefixexp      goto state 23
	Funccall       goto state 24
	Tableconstructorgoto state 25
	Unop           goto state 26
	String         goto state 27

State 77

	Label -> '::' . Ident '::'                          (rule 50)

	ident          shift, and enter state 20

	Ident          goto state 81

State 78

	Stat -> ';' .                                       (rule 24)

	break          reduce using rule 24
	do             reduce using rule 24
	else           reduce using rule 24
	elseif         reduce using rule 24
	end            reduce using rule 24
	for            reduce using rule 24
	function       reduce using rule 24
	goto           reduce using rule 24
	if             reduce using rule 24
	local          reduce using rule 24
	repeat         reduce using rule 24
	return         reduce using rule 24
	until          reduce using rule 24
	while          reduce using rule 24
	'('            reduce using rule 24
	'}'            reduce using rule 24
	'::'           reduce using rule 24
	';'            reduce using rule 24
	ident          reduce using rule 24


State 79

	Typing1 -> Kailua Typing1 .                         (rule 6)

	'>'            reduce using rule 6
	%eof           reduce using rule 6


State 80

	Typing1 -> Typingbit Typing1 .                      (rule 5)

	'>'            reduce using rule 5
	%eof           reduce using rule 5


State 81

	Label -> '::' Ident . '::'                          (rule 50)

	'::'           shift, and enter state 192


State 82

	Stat -> while Exp . do Block end                    (rule 31)
	Exp -> Exp . Binop Exp                              (rule 81)

	and            shift, and enter state 130
	do             shift, and enter state 191
	or             shift, and enter state 131
	'+'            shift, and enter state 132
	'-'            shift, and enter state 133
	'*'            shift, and enter state 134
	'/'            shift, and enter state 135
	'%'            shift, and enter state 136
	'^'            shift, and enter state 137
	'&'            shift, and enter state 138
	'~'            shift, and enter state 139
	'|'            shift, and enter state 140
	'<<'           shift, and enter state 141
	'>>'           shift, and enter state 142
	'//'           shift, and enter state 143
	'=='           shift, and enter state 144
	'~='           shift, and enter state 145
	'<='           shift, and enter state 146
	'>='           shift, and enter state 147
	'<'            shift, and enter state 148
	'>'            shift, and enter state 149
	'..'           shift, and enter state 151

	Binop          goto state 129

State 83

	Retstat -> return Explist .                         (rule 48)
	Retstat -> return Explist . ';'                     (rule 49)

	else           reduce using rule 48
	elseif         reduce using rule 48
	end            reduce using rule 48
	until          reduce using rule 48
	'}'            reduce using rule 48
	';'            shift, and enter state 190


State 84

	Explist -> Explist11 .                              (rule 65)

	break          reduce using rule 65
	do             reduce using rule 65
	else           reduce using rule 65
	elseif         reduce using rule 65
	end            reduce using rule 65
	for            reduce using rule 65
	function       reduce using rule 65
	goto           reduce using rule 65
	if             reduce using rule 65
	local          reduce using rule 65
	repeat         reduce using rule 65
	return         reduce using rule 65
	until          reduce using rule 65
	while          reduce using rule 65
	'('            reduce using rule 65
	')'            reduce using rule 65
	'}'            reduce using rule 65
	'::'           reduce using rule 65
	';'            reduce using rule 65
	ident          reduce using rule 65


State 85

	Explist11 -> Exp .                                  (rule 68)
	Explist11 -> Exp . ',' Explist11                    (rule 69)
	Exp -> Exp . Binop Exp                              (rule 81)

	and            shift, and enter state 130
	break          reduce using rule 68
	do             reduce using rule 68
	else           reduce using rule 68
	elseif         reduce using rule 68
	end            reduce using rule 68
	for            reduce using rule 68
	function       reduce using rule 68
	goto           reduce using rule 68
	if             reduce using rule 68
	local          reduce using rule 68
	or             shift, and enter state 131
	repeat         reduce using rule 68
	return         reduce using rule 68
	until          reduce using rule 68
	while          reduce using rule 68
	'+'            shift, and enter state 132
	'-'            shift, and enter state 133
	'*'            shift, and enter state 134
	'/'            shift, and enter state 135
	'%'            shift, and enter state 136
	'^'            shift, and enter state 137
	'&'            shift, and enter state 138
	'~'            shift, and enter state 139
	'|'            shift, and enter state 140
	'<<'           shift, and enter state 141
	'>>'           shift, and enter state 142
	'//'           shift, and enter state 143
	'=='           shift, and enter state 144
	'~='           shift, and enter state 145
	'<='           shift, and enter state 146
	'>='           shift, and enter state 147
	'<'            shift, and enter state 148
	'>'            shift, and enter state 149
	'('            reduce using rule 68
	')'            reduce using rule 68
	'}'            reduce using rule 68
	'::'           reduce using rule 68
	';'            reduce using rule 68
	','            shift, and enter state 189
	'..'           shift, and enter state 151
	ident          reduce using rule 68

	Binop          goto state 129

State 86

	Stat -> repeat Block . until Exp                    (rule 32)

	until          shift, and enter state 188


State 87

	Stat -> local Identlist1 .                          (rule 39)
	Stat -> local Identlist1 . '=' Explist              (rule 40)

	break          reduce using rule 39
	do             reduce using rule 39
	else           reduce using rule 39
	elseif         reduce using rule 39
	end            reduce using rule 39
	for            reduce using rule 39
	function       reduce using rule 39
	goto           reduce using rule 39
	if             reduce using rule 39
	local          reduce using rule 39
	repeat         reduce using rule 39
	return         reduce using rule 39
	until          reduce using rule 39
	while          reduce using rule 39
	'='            shift, and enter state 187
	'('            reduce using rule 39
	'}'            reduce using rule 39
	'::'           reduce using rule 39
	';'            reduce using rule 39
	ident          reduce using rule 39


State 88

	Identlist1 -> Identlist11 .                         (rule 61)

	break          reduce using rule 61
	do             reduce using rule 61
	else           reduce using rule 61
	elseif         reduce using rule 61
	end            reduce using rule 61
	for            reduce using rule 61
	function       reduce using rule 61
	goto           reduce using rule 61
	if             reduce using rule 61
	in             reduce using rule 61
	local          reduce using rule 61
	repeat         reduce using rule 61
	return         reduce using rule 61
	until          reduce using rule 61
	while          reduce using rule 61
	'='            reduce using rule 61
	'('            reduce using rule 61
	'}'            reduce using rule 61
	'::'           reduce using rule 61
	';'            reduce using rule 61
	ident          reduce using rule 61


State 89

	Identlist11 -> Ident .                              (rule 62)
	Identlist11 -> Ident . ',' Identlist11              (rule 63)

	break          reduce using rule 62
	do             reduce using rule 62
	else           reduce using rule 62
	elseif         reduce using rule 62
	end            reduce using rule 62
	for            reduce using rule 62
	function       reduce using rule 62
	goto           reduce using rule 62
	if             reduce using rule 62
	in             reduce using rule 62
	local          reduce using rule 62
	repeat         reduce using rule 62
	return         reduce using rule 62
	until          reduce using rule 62
	while          reduce using rule 62
	'='            reduce using rule 62
	'('            reduce using rule 62
	')'            reduce using rule 62
	'}'            reduce using rule 62
	'::'           reduce using rule 62
	';'            reduce using rule 62
	','            shift, and enter state 180
			(reduce using rule 62)

	ident          reduce using rule 62


State 90

	Stat -> local function . Ident Funcbody             (rule 38)

	ident          shift, and enter state 20

	Ident          goto state 186

State 91

	If1 -> if Exp . then Block ElseIf                   (rule 43)
	If1 -> if Exp . then Block                          (rule 44)
	Exp -> Exp . Binop Exp                              (rule 81)

	and            shift, and enter state 130
	or             shift, and enter state 131
	then           shift, and enter state 185
	'+'            shift, and enter state 132
	'-'            shift, and enter state 133
	'*'            shift, and enter state 134
	'/'            shift, and enter state 135
	'%'            shift, and enter state 136
	'^'            shift, and enter state 137
	'&'            shift, and enter state 138
	'~'            shift, and enter state 139
	'|'            shift, and enter state 140
	'<<'           shift, and enter state 141
	'>>'           shift, and enter state 142
	'//'           shift, and enter state 143
	'=='           shift, and enter state 144
	'~='           shift, and enter state 145
	'<='           shift, and enter state 146
	'>='           shift, and enter state 147
	'<'            shift, and enter state 148
	'>'            shift, and enter state 149
	'..'           shift, and enter state 151

	Binop          goto state 129

State 92

	Stat -> goto Ident .                                (rule 29)

	break          reduce using rule 29
	do             reduce using rule 29
	else           reduce using rule 29
	elseif         reduce using rule 29
	end            reduce using rule 29
	for            reduce using rule 29
	function       reduce using rule 29
	goto           reduce using rule 29
	if             reduce using rule 29
	local          reduce using rule 29
	repeat         reduce using rule 29
	return         reduce using rule 29
	until          reduce using rule 29
	while          reduce using rule 29
	'('            reduce using rule 29
	'}'            reduce using rule 29
	'::'           reduce using rule 29
	';'            reduce using rule 29
	ident          reduce using rule 29


State 93

	Stat -> function Funcname . Funcbody                (rule 37)

	'('            shift, and enter state 127

	Funcbody       goto state 184

State 94

	Funcname -> Funcname1 .                             (rule 51)
	Funcname -> Funcname1 . ':' Ident                   (rule 52)

	'('            reduce using rule 51
	':'            shift, and enter state 183


State 95

	Funcname1 -> Ident .                                (rule 53)
	Funcname1 -> Ident . '.' Funcname1                  (rule 54)

	'('            reduce using rule 53
	':'            reduce using rule 53
	'.'            shift, and enter state 182


State 96

	Stat -> for Identlist1 . in Explist1 do Block end    (rule 36)

	in             shift, and enter state 181


State 97

	Stat -> for Ident . '=' Exp ',' Exp do Block end    (rule 34)
	Stat -> for Ident . '=' Exp ',' Exp ',' Exp do Block end    (rule 35)
	Identlist11 -> Ident .                              (rule 62)
	Identlist11 -> Ident . ',' Identlist11              (rule 63)

	in             reduce using rule 62
	'='            shift, and enter state 179
	','            shift, and enter state 180


State 98

	Stat -> do Block . end                              (rule 30)

	end            shift, and enter state 178


State 99

	Varlist11 -> Var ',' . Varlist11                    (rule 57)

	'('            shift, and enter state 19
	ident          shift, and enter state 20

	Varlist11      goto state 177
	Var            goto state 65
	Ident          goto state 16
	Prefixexp      goto state 17
	Funccall       goto state 24

State 100

	Stat -> Varlist1 '=' . Explist1                     (rule 25)

	false          shift, and enter state 28
	function       shift, and enter state 29
	nil            shift, and enter state 30
	not            shift, and enter state 31
	true           shift, and enter state 32
	'-'            shift, and enter state 33
	'#'            shift, and enter state 34
	'~'            shift, and enter state 35
	'<'            shift, and enter state 36
	'('            shift, and enter state 19
	'{'            shift, and enter state 37
	'...'          shift, and enter state 38
	'\''           shift, and enter state 39
	'"'            shift, and enter state 40
	ident          shift, and enter state 20
	int            shift, and enter state 41
	float          shift, and enter state 42

	Var            goto state 15
	Ident          goto state 16
	Explist1       goto state 175
	Explist11      goto state 176
	Exp            goto state 85
	Prefixexp      goto state 23
	Funccall       goto state 24
	Tableconstructorgoto state 25
	Unop           goto state 26
	String         goto state 27

State 101

	If -> If1 else . Block end                          (rule 42)

	break          shift, and enter state 67
	do             shift, and enter state 68
	end            reduce using rule 22
	for            shift, and enter state 69
	function       shift, and enter state 70
	goto           shift, and enter state 71
	if             shift, and enter state 72
	local          shift, and enter state 73
	repeat         shift, and enter state 74
	return         shift, and enter state 75
	while          shift, and enter state 76
	'('            shift, and enter state 19
	'::'           shift, and enter state 77
	';'            shift, and enter state 78
	ident          shift, and enter state 20

	Block          goto state 174
	Stat           goto state 58
	If             goto state 59
	If1            goto state 60
	Retstat        goto state 61
	Label          goto state 62
	Varlist1       goto state 63
	Varlist11      goto state 64
	Var            goto state 65
	Ident          goto state 16
	Prefixexp      goto state 17
	Funccall       goto state 66

State 102

	If -> If1 end .                                     (rule 41)

	break          reduce using rule 41
	do             reduce using rule 41
	else           reduce using rule 41
	elseif         reduce using rule 41
	end            reduce using rule 41
	for            reduce using rule 41
	function       reduce using rule 41
	goto           reduce using rule 41
	if             reduce using rule 41
	local          reduce using rule 41
	repeat         reduce using rule 41
	return         reduce using rule 41
	until          reduce using rule 41
	while          reduce using rule 41
	'('            reduce using rule 41
	'}'            reduce using rule 41
	'::'           reduce using rule 41
	';'            reduce using rule 41
	ident          reduce using rule 41


State 103

	Block -> Stat Block .                               (rule 23)

	else           reduce using rule 23
	elseif         reduce using rule 23
	end            reduce using rule 23
	until          reduce using rule 23
	'}'            reduce using rule 23


State 104

	Kailua -> '{' Block '}' .                           (rule 20)

	'>'            reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	'['            reduce using rule 20
	']'            reduce using rule 20
	inline         reduce using rule 20
	newpar         reduce using rule 20
	space          reduce using rule 20
	symbol         reduce using rule 20
	%eof           reduce using rule 20


State 105

	Mathbit -> '{' Math . '}'                           (rule 15)

	'}'            shift, and enter state 173


State 106

	Math -> Kailua Math .                               (rule 13)

	'}'            reduce using rule 13
	']'            reduce using rule 13


State 107

	Math -> Mathbit Math .                              (rule 12)

	'}'            reduce using rule 12
	']'            reduce using rule 12


State 108

	Mathbit -> Mathbit Mathbinop . Mathbit              (rule 16)

	'{'            shift, and enter state 172
	symbol         shift, and enter state 56

	Mathbit        goto state 171

State 109

	Mathbinop -> '^' .                                  (rule 17)

	'{'            reduce using rule 17
	symbol         reduce using rule 17


State 110

	Mathbinop -> '_' .                                  (rule 18)

	'{'            reduce using rule 18
	symbol         reduce using rule 18


State 111

	Typing1 -> '[' Math ']' . Typing1                   (rule 7)

	'>'            reduce using rule 4
	'{'            shift, and enter state 7
	'['            shift, and enter state 8
	inline         shift, and enter state 9
	newpar         shift, and enter state 10
	space          shift, and enter state 11
	symbol         shift, and enter state 12
	%eof           reduce using rule 4

	Typing1        goto state 170
	Typingbit      goto state 5
	Kailua         goto state 6

State 112

	TypingArgs -> '<' Typing '>' . TypingArgs           (rule 92)
	TypingArgs -> '<' Typing '>' .                      (rule 93)

	and            reduce using rule 93
	break          reduce using rule 93
	do             reduce using rule 93
	else           reduce using rule 93
	elseif         reduce using rule 93
	end            reduce using rule 93
	for            reduce using rule 93
	function       reduce using rule 93
	goto           reduce using rule 93
	if             reduce using rule 93
	local          reduce using rule 93
	or             reduce using rule 93
	repeat         reduce using rule 93
	return         reduce using rule 93
	then           reduce using rule 93
	until          reduce using rule 93
	while          reduce using rule 93
	'+'            reduce using rule 93
	'-'            reduce using rule 93
	'*'            reduce using rule 93
	'/'            reduce using rule 93
	'%'            reduce using rule 93
	'^'            reduce using rule 93
	'&'            reduce using rule 93
	'~'            reduce using rule 93
	'|'            reduce using rule 93
	'<<'           reduce using rule 93
	'>>'           reduce using rule 93
	'//'           reduce using rule 93
	'=='           reduce using rule 93
	'~='           reduce using rule 93
	'<='           reduce using rule 93
	'>='           reduce using rule 93
	'<'            fail
	'>'            reduce using rule 93
	'('            reduce using rule 93
	')'            reduce using rule 93
	'{'            reduce using rule 93
	'}'            reduce using rule 93
	'['            reduce using rule 93
	']'            reduce using rule 93
	'::'           reduce using rule 93
	';'            reduce using rule 93
	':'            reduce using rule 93
	','            reduce using rule 93
	'.'            reduce using rule 93
	'..'           reduce using rule 93
	'\''           reduce using rule 93
	'"'            reduce using rule 93
	ident          reduce using rule 93
	%eof           reduce using rule 93

	TypingArgs     goto state 169

State 113

	Var -> Prefixexp '.' Ident .                        (rule 60)

	and            reduce using rule 60
	break          reduce using rule 60
	do             reduce using rule 60
	else           reduce using rule 60
	elseif         reduce using rule 60
	end            reduce using rule 60
	for            reduce using rule 60
	function       reduce using rule 60
	goto           reduce using rule 60
	if             reduce using rule 60
	local          reduce using rule 60
	or             reduce using rule 60
	repeat         reduce using rule 60
	return         reduce using rule 60
	then           reduce using rule 60
	until          reduce using rule 60
	while          reduce using rule 60
	'+'            reduce using rule 60
	'-'            reduce using rule 60
	'*'            reduce using rule 60
	'/'            reduce using rule 60
	'%'            reduce using rule 60
	'^'            reduce using rule 60
	'&'            reduce using rule 60
	'~'            reduce using rule 60
	'|'            reduce using rule 60
	'<<'           reduce using rule 60
	'>>'           reduce using rule 60
	'//'           reduce using rule 60
	'=='           reduce using rule 60
	'~='           reduce using rule 60
	'<='           reduce using rule 60
	'>='           reduce using rule 60
	'<'            reduce using rule 60
	'>'            reduce using rule 60
	'='            reduce using rule 60
	'('            reduce using rule 60
	')'            reduce using rule 60
	'{'            reduce using rule 60
	'}'            reduce using rule 60
	'['            reduce using rule 60
	']'            reduce using rule 60
	'::'           reduce using rule 60
	';'            reduce using rule 60
	':'            reduce using rule 60
	','            reduce using rule 60
	'.'            reduce using rule 60
	'..'           reduce using rule 60
	'\''           reduce using rule 60
	'"'            reduce using rule 60
	ident          reduce using rule 60


State 114

	Funccall -> Prefixexp ':' Ident . Args              (rule 87)

	'<'            shift, and enter state 14
	'('            shift, and enter state 47
	'{'            shift, and enter state 37
	'\''           shift, and enter state 39
	'"'            shift, and enter state 40

	Args           goto state 168
	TypingArgs     goto state 44
	Tableconstructorgoto state 45
	String         goto state 46

State 115

	Var -> Prefixexp '[' Exp . ']'                      (rule 59)
	Exp -> Exp . Binop Exp                              (rule 81)

	and            shift, and enter state 130
	or             shift, and enter state 131
	'+'            shift, and enter state 132
	'-'            shift, and enter state 133
	'*'            shift, and enter state 134
	'/'            shift, and enter state 135
	'%'            shift, and enter state 136
	'^'            shift, and enter state 137
	'&'            shift, and enter state 138
	'~'            shift, and enter state 139
	'|'            shift, and enter state 140
	'<<'           shift, and enter state 141
	'>>'           shift, and enter state 142
	'//'           shift, and enter state 143
	'=='           shift, and enter state 144
	'~='           shift, and enter state 145
	'<='           shift, and enter state 146
	'>='           shift, and enter state 147
	'<'            shift, and enter state 148
	'>'            shift, and enter state 149
	']'            shift, and enter state 167
	'..'           shift, and enter state 151

	Binop          goto state 129

State 116

	Args -> '(' Explist . ')'                           (rule 88)

	')'            shift, and enter state 166


State 117

	String -> '"' string . '"'                          (rule 134)

	'"'            shift, and enter state 165


State 118

	String -> '\'' string . '\''                        (rule 133)

	'\''           shift, and enter state 164


State 119

	Var -> Ident .                                      (rule 58)
	Field -> Ident . '=' Exp                            (rule 106)

	and            reduce using rule 58
	or             reduce using rule 58
	'+'            reduce using rule 58
	'-'            reduce using rule 58
	'*'            reduce using rule 58
	'/'            reduce using rule 58
	'%'            reduce using rule 58
	'^'            reduce using rule 58
	'&'            reduce using rule 58
	'~'            reduce using rule 58
	'|'            reduce using rule 58
	'<<'           reduce using rule 58
	'>>'           reduce using rule 58
	'//'           reduce using rule 58
	'=='           reduce using rule 58
	'~='           reduce using rule 58
	'<='           reduce using rule 58
	'>='           reduce using rule 58
	'<'            reduce using rule 58
	'>'            reduce using rule 58
	'='            shift, and enter state 163
	'('            reduce using rule 58
	'{'            reduce using rule 58
	'}'            reduce using rule 58
	'['            reduce using rule 58
	';'            reduce using rule 58
	':'            reduce using rule 58
	','            reduce using rule 58
	'.'            reduce using rule 58
	'..'           reduce using rule 58
	'\''           reduce using rule 58
	'"'            reduce using rule 58


State 120

	Exp -> Exp . Binop Exp                              (rule 81)
	Field -> Exp .                                      (rule 107)

	and            shift, and enter state 130
	or             shift, and enter state 131
	'+'            shift, and enter state 132
	'-'            shift, and enter state 133
	'*'            shift, and enter state 134
	'/'            shift, and enter state 135
	'%'            shift, and enter state 136
	'^'            shift, and enter state 137
	'&'            shift, and enter state 138
	'~'            shift, and enter state 139
	'|'            shift, and enter state 140
	'<<'           shift, and enter state 141
	'>>'           shift, and enter state 142
	'//'           shift, and enter state 143
	'=='           shift, and enter state 144
	'~='           shift, and enter state 145
	'<='           shift, and enter state 146
	'>='           shift, and enter state 147
	'<'            shift, and enter state 148
	'>'            shift, and enter state 149
	'}'            reduce using rule 107
	';'            reduce using rule 107
	','            reduce using rule 107
	'..'           shift, and enter state 151

	Binop          goto state 129

State 121

	Tableconstructor -> '{' Fieldlist . '}'             (rule 99)
	Tableconstructor -> '{' Fieldlist . ',' '}'         (rule 100)
	Tableconstructor -> '{' Fieldlist . ';' '}'         (rule 101)

	'}'            shift, and enter state 160
	';'            shift, and enter state 161
	','            shift, and enter state 162


State 122

	Fieldlist -> Field .                                (rule 102)
	Fieldlist -> Field . ',' Fieldlist                  (rule 103)
	Fieldlist -> Field . ';' Fieldlist                  (rule 104)

	'}'            reduce using rule 102
	';'            shift, and enter state 158
			(reduce using rule 102)

	','            shift, and enter state 159
			(reduce using rule 102)



State 123

	Tableconstructor -> '{' '}' .                       (rule 98)

	and            reduce using rule 98
	break          reduce using rule 98
	do             reduce using rule 98
	else           reduce using rule 98
	elseif         reduce using rule 98
	end            reduce using rule 98
	for            reduce using rule 98
	function       reduce using rule 98
	goto           reduce using rule 98
	if             reduce using rule 98
	local          reduce using rule 98
	or             reduce using rule 98
	repeat         reduce using rule 98
	return         reduce using rule 98
	then           reduce using rule 98
	until          reduce using rule 98
	while          reduce using rule 98
	'+'            reduce using rule 98
	'-'            reduce using rule 98
	'*'            reduce using rule 98
	'/'            reduce using rule 98
	'%'            reduce using rule 98
	'^'            reduce using rule 98
	'&'            reduce using rule 98
	'~'            reduce using rule 98
	'|'            reduce using rule 98
	'<<'           reduce using rule 98
	'>>'           reduce using rule 98
	'//'           reduce using rule 98
	'=='           reduce using rule 98
	'~='           reduce using rule 98
	'<='           reduce using rule 98
	'>='           reduce using rule 98
	'<'            reduce using rule 98
	'>'            reduce using rule 98
	'('            reduce using rule 98
	')'            reduce using rule 98
	'{'            reduce using rule 98
	'}'            reduce using rule 98
	'['            reduce using rule 98
	']'            reduce using rule 98
	'::'           reduce using rule 98
	';'            reduce using rule 98
	':'            reduce using rule 98
	','            reduce using rule 98
	'.'            reduce using rule 98
	'..'           reduce using rule 98
	'\''           reduce using rule 98
	'"'            reduce using rule 98
	ident          reduce using rule 98
	%eof           reduce using rule 98


State 124

	Field -> '[' . Exp ']' '=' Exp                      (rule 105)

	false          shift, and enter state 28
	function       shift, and enter state 29
	nil            shift, and enter state 30
	not            shift, and enter state 31
	true           shift, and enter state 32
	'-'            shift, and enter state 33
	'#'            shift, and enter state 34
	'~'            shift, and enter state 35
	'<'            shift, and enter state 36
	'('            shift, and enter state 19
	'{'            shift, and enter state 37
	'...'          shift, and enter state 38
	'\''           shift, and enter state 39
	'"'            shift, and enter state 40
	ident          shift, and enter state 20
	int            shift, and enter state 41
	float          shift, and enter state 42

	Var            goto state 15
	Ident          goto state 16
	Exp            goto state 157
	Prefixexp      goto state 23
	Funccall       goto state 24
	Tableconstructorgoto state 25
	Unop           goto state 26
	String         goto state 27

State 125

	Exp -> '<' Typing . '>'                             (rule 80)

	'>'            shift, and enter state 156


State 126

	Exp -> function Funcbody .                          (rule 77)

	and            reduce using rule 77
	break          reduce using rule 77
	do             reduce using rule 77
	else           reduce using rule 77
	elseif         reduce using rule 77
	end            reduce using rule 77
	for            reduce using rule 77
	function       reduce using rule 77
	goto           reduce using rule 77
	if             reduce using rule 77
	local          reduce using rule 77
	or             reduce using rule 77
	repeat         reduce using rule 77
	return         reduce using rule 77
	then           reduce using rule 77
	until          reduce using rule 77
	while          reduce using rule 77
	'+'            reduce using rule 77
	'-'            reduce using rule 77
	'*'            reduce using rule 77
	'/'            reduce using rule 77
	'%'            reduce using rule 77
	'^'            reduce using rule 77
	'&'            reduce using rule 77
	'~'            reduce using rule 77
	'|'            reduce using rule 77
	'<<'           reduce using rule 77
	'>>'           reduce using rule 77
	'//'           reduce using rule 77
	'=='           reduce using rule 77
	'~='           reduce using rule 77
	'<='           reduce using rule 77
	'>='           reduce using rule 77
	'<'            reduce using rule 77
	'>'            reduce using rule 77
	'('            reduce using rule 77
	')'            reduce using rule 77
	'}'            reduce using rule 77
	']'            reduce using rule 77
	'::'           reduce using rule 77
	';'            reduce using rule 77
	','            reduce using rule 77
	'..'           reduce using rule 77
	ident          reduce using rule 77


State 127

	Funcbody -> '(' . ')' Block end                     (rule 94)
	Funcbody -> '(' . '...' ')' Block end               (rule 95)
	Funcbody -> '(' . Identlist11 ')' Block end         (rule 96)
	Funcbody -> '(' . Identlist11 ',' '...' ')' Block end    (rule 97)

	')'            shift, and enter state 154
	'...'          shift, and enter state 155
	ident          shift, and enter state 20

	Identlist11    goto state 153
	Ident          goto state 89

State 128

	Exp -> Exp . Binop Exp                              (rule 81)
	Exp -> Unop Exp .                                   (rule 82)

	and            shift, and enter state 130
			(reduce using rule 82)

	break          reduce using rule 82
	do             reduce using rule 82
	else           reduce using rule 82
	elseif         reduce using rule 82
	end            reduce using rule 82
	for            reduce using rule 82
	function       reduce using rule 82
	goto           reduce using rule 82
	if             reduce using rule 82
	local          reduce using rule 82
	or             shift, and enter state 131
			(reduce using rule 82)

	repeat         reduce using rule 82
	return         reduce using rule 82
	then           reduce using rule 82
	until          reduce using rule 82
	while          reduce using rule 82
	'+'            shift, and enter state 132
			(reduce using rule 82)

	'-'            shift, and enter state 133
			(reduce using rule 82)

	'*'            shift, and enter state 134
			(reduce using rule 82)

	'/'            shift, and enter state 135
			(reduce using rule 82)

	'%'            shift, and enter state 136
			(reduce using rule 82)

	'^'            shift, and enter state 137
			(reduce using rule 82)

	'&'            shift, and enter state 138
			(reduce using rule 82)

	'~'            shift, and enter state 139
			(reduce using rule 82)

	'|'            shift, and enter state 140
			(reduce using rule 82)

	'<<'           shift, and enter state 141
			(reduce using rule 82)

	'>>'           shift, and enter state 142
			(reduce using rule 82)

	'//'           shift, and enter state 143
			(reduce using rule 82)

	'=='           shift, and enter state 144
			(reduce using rule 82)

	'~='           shift, and enter state 145
			(reduce using rule 82)

	'<='           shift, and enter state 146
			(reduce using rule 82)

	'>='           shift, and enter state 147
			(reduce using rule 82)

	'<'            shift, and enter state 148
			(reduce using rule 82)

	'>'            shift, and enter state 149
			(reduce using rule 82)

	'('            reduce using rule 82
	')'            reduce using rule 82
	'}'            reduce using rule 82
	']'            reduce using rule 82
	'::'           reduce using rule 82
	';'            reduce using rule 82
	','            reduce using rule 82
	'..'           shift, and enter state 151
			(reduce using rule 82)

	ident          reduce using rule 82

	Binop          goto state 129

State 129

	Exp -> Exp Binop . Exp                              (rule 81)

	false          shift, and enter state 28
	function       shift, and enter state 29
	nil            shift, and enter state 30
	not            shift, and enter state 31
	true           shift, and enter state 32
	'-'            shift, and enter state 33
	'#'            shift, and enter state 34
	'~'            shift, and enter state 35
	'<'            shift, and enter state 36
	'('            shift, and enter state 19
	'{'            shift, and enter state 37
	'...'          shift, and enter state 38
	'\''           shift, and enter state 39
	'"'            shift, and enter state 40
	ident          shift, and enter state 20
	int            shift, and enter state 41
	float          shift, and enter state 42

	Var            goto state 15
	Ident          goto state 16
	Exp            goto state 152
	Prefixexp      goto state 23
	Funccall       goto state 24
	Tableconstructorgoto state 25
	Unop           goto state 26
	String         goto state 27

State 130

	Binop -> and .                                      (rule 127)

	false          reduce using rule 127
	function       reduce using rule 127
	nil            reduce using rule 127
	not            reduce using rule 127
	true           reduce using rule 127
	'-'            reduce using rule 127
	'#'            reduce using rule 127
	'~'            reduce using rule 127
	'<'            reduce using rule 127
	'('            reduce using rule 127
	'{'            reduce using rule 127
	'...'          reduce using rule 127
	'\''           reduce using rule 127
	'"'            reduce using rule 127
	ident          reduce using rule 127
	int            reduce using rule 127
	float          reduce using rule 127


State 131

	Binop -> or .                                       (rule 128)

	false          reduce using rule 128
	function       reduce using rule 128
	nil            reduce using rule 128
	not            reduce using rule 128
	true           reduce using rule 128
	'-'            reduce using rule 128
	'#'            reduce using rule 128
	'~'            reduce using rule 128
	'<'            reduce using rule 128
	'('            reduce using rule 128
	'{'            reduce using rule 128
	'...'          reduce using rule 128
	'\''           reduce using rule 128
	'"'            reduce using rule 128
	ident          reduce using rule 128
	int            reduce using rule 128
	float          reduce using rule 128


State 132

	Binop -> '+' .                                      (rule 108)

	false          reduce using rule 108
	function       reduce using rule 108
	nil            reduce using rule 108
	not            reduce using rule 108
	true           reduce using rule 108
	'-'            reduce using rule 108
	'#'            reduce using rule 108
	'~'            reduce using rule 108
	'<'            reduce using rule 108
	'('            reduce using rule 108
	'{'            reduce using rule 108
	'...'          reduce using rule 108
	'\''           reduce using rule 108
	'"'            reduce using rule 108
	ident          reduce using rule 108
	int            reduce using rule 108
	float          reduce using rule 108


State 133

	Binop -> '-' .                                      (rule 109)

	false          reduce using rule 109
	function       reduce using rule 109
	nil            reduce using rule 109
	not            reduce using rule 109
	true           reduce using rule 109
	'-'            reduce using rule 109
	'#'            reduce using rule 109
	'~'            reduce using rule 109
	'<'            reduce using rule 109
	'('            reduce using rule 109
	'{'            reduce using rule 109
	'...'          reduce using rule 109
	'\''           reduce using rule 109
	'"'            reduce using rule 109
	ident          reduce using rule 109
	int            reduce using rule 109
	float          reduce using rule 109


State 134

	Binop -> '*' .                                      (rule 110)

	false          reduce using rule 110
	function       reduce using rule 110
	nil            reduce using rule 110
	not            reduce using rule 110
	true           reduce using rule 110
	'-'            reduce using rule 110
	'#'            reduce using rule 110
	'~'            reduce using rule 110
	'<'            reduce using rule 110
	'('            reduce using rule 110
	'{'            reduce using rule 110
	'...'          reduce using rule 110
	'\''           reduce using rule 110
	'"'            reduce using rule 110
	ident          reduce using rule 110
	int            reduce using rule 110
	float          reduce using rule 110


State 135

	Binop -> '/' .                                      (rule 111)

	false          reduce using rule 111
	function       reduce using rule 111
	nil            reduce using rule 111
	not            reduce using rule 111
	true           reduce using rule 111
	'-'            reduce using rule 111
	'#'            reduce using rule 111
	'~'            reduce using rule 111
	'<'            reduce using rule 111
	'('            reduce using rule 111
	'{'            reduce using rule 111
	'...'          reduce using rule 111
	'\''           reduce using rule 111
	'"'            reduce using rule 111
	ident          reduce using rule 111
	int            reduce using rule 111
	float          reduce using rule 111


State 136

	Binop -> '%' .                                      (rule 114)

	false          reduce using rule 114
	function       reduce using rule 114
	nil            reduce using rule 114
	not            reduce using rule 114
	true           reduce using rule 114
	'-'            reduce using rule 114
	'#'            reduce using rule 114
	'~'            reduce using rule 114
	'<'            reduce using rule 114
	'('            reduce using rule 114
	'{'            reduce using rule 114
	'...'          reduce using rule 114
	'\''           reduce using rule 114
	'"'            reduce using rule 114
	ident          reduce using rule 114
	int            reduce using rule 114
	float          reduce using rule 114


State 137

	Binop -> '^' .                                      (rule 113)

	false          reduce using rule 113
	function       reduce using rule 113
	nil            reduce using rule 113
	not            reduce using rule 113
	true           reduce using rule 113
	'-'            reduce using rule 113
	'#'            reduce using rule 113
	'~'            reduce using rule 113
	'<'            reduce using rule 113
	'('            reduce using rule 113
	'{'            reduce using rule 113
	'...'          reduce using rule 113
	'\''           reduce using rule 113
	'"'            reduce using rule 113
	ident          reduce using rule 113
	int            reduce using rule 113
	float          reduce using rule 113


State 138

	Binop -> '&' .                                      (rule 115)

	false          reduce using rule 115
	function       reduce using rule 115
	nil            reduce using rule 115
	not            reduce using rule 115
	true           reduce using rule 115
	'-'            reduce using rule 115
	'#'            reduce using rule 115
	'~'            reduce using rule 115
	'<'            reduce using rule 115
	'('            reduce using rule 115
	'{'            reduce using rule 115
	'...'          reduce using rule 115
	'\''           reduce using rule 115
	'"'            reduce using rule 115
	ident          reduce using rule 115
	int            reduce using rule 115
	float          reduce using rule 115


State 139

	Binop -> '~' .                                      (rule 116)

	false          reduce using rule 116
	function       reduce using rule 116
	nil            reduce using rule 116
	not            reduce using rule 116
	true           reduce using rule 116
	'-'            reduce using rule 116
	'#'            reduce using rule 116
	'~'            reduce using rule 116
	'<'            reduce using rule 116
	'('            reduce using rule 116
	'{'            reduce using rule 116
	'...'          reduce using rule 116
	'\''           reduce using rule 116
	'"'            reduce using rule 116
	ident          reduce using rule 116
	int            reduce using rule 116
	float          reduce using rule 116


State 140

	Binop -> '|' .                                      (rule 117)

	false          reduce using rule 117
	function       reduce using rule 117
	nil            reduce using rule 117
	not            reduce using rule 117
	true           reduce using rule 117
	'-'            reduce using rule 117
	'#'            reduce using rule 117
	'~'            reduce using rule 117
	'<'            reduce using rule 117
	'('            reduce using rule 117
	'{'            reduce using rule 117
	'...'          reduce using rule 117
	'\''           reduce using rule 117
	'"'            reduce using rule 117
	ident          reduce using rule 117
	int            reduce using rule 117
	float          reduce using rule 117


State 141

	Binop -> '<<' .                                     (rule 119)

	false          reduce using rule 119
	function       reduce using rule 119
	nil            reduce using rule 119
	not            reduce using rule 119
	true           reduce using rule 119
	'-'            reduce using rule 119
	'#'            reduce using rule 119
	'~'            reduce using rule 119
	'<'            reduce using rule 119
	'('            reduce using rule 119
	'{'            reduce using rule 119
	'...'          reduce using rule 119
	'\''           reduce using rule 119
	'"'            reduce using rule 119
	ident          reduce using rule 119
	int            reduce using rule 119
	float          reduce using rule 119


State 142

	Binop -> '>>' .                                     (rule 118)

	false          reduce using rule 118
	function       reduce using rule 118
	nil            reduce using rule 118
	not            reduce using rule 118
	true           reduce using rule 118
	'-'            reduce using rule 118
	'#'            reduce using rule 118
	'~'            reduce using rule 118
	'<'            reduce using rule 118
	'('            reduce using rule 118
	'{'            reduce using rule 118
	'...'          reduce using rule 118
	'\''           reduce using rule 118
	'"'            reduce using rule 118
	ident          reduce using rule 118
	int            reduce using rule 118
	float          reduce using rule 118


State 143

	Binop -> '//' .                                     (rule 112)

	false          reduce using rule 112
	function       reduce using rule 112
	nil            reduce using rule 112
	not            reduce using rule 112
	true           reduce using rule 112
	'-'            reduce using rule 112
	'#'            reduce using rule 112
	'~'            reduce using rule 112
	'<'            reduce using rule 112
	'('            reduce using rule 112
	'{'            reduce using rule 112
	'...'          reduce using rule 112
	'\''           reduce using rule 112
	'"'            reduce using rule 112
	ident          reduce using rule 112
	int            reduce using rule 112
	float          reduce using rule 112


State 144

	Binop -> '==' .                                     (rule 125)

	false          reduce using rule 125
	function       reduce using rule 125
	nil            reduce using rule 125
	not            reduce using rule 125
	true           reduce using rule 125
	'-'            reduce using rule 125
	'#'            reduce using rule 125
	'~'            reduce using rule 125
	'<'            reduce using rule 125
	'('            reduce using rule 125
	'{'            reduce using rule 125
	'...'          reduce using rule 125
	'\''           reduce using rule 125
	'"'            reduce using rule 125
	ident          reduce using rule 125
	int            reduce using rule 125
	float          reduce using rule 125


State 145

	Binop -> '~=' .                                     (rule 126)

	false          reduce using rule 126
	function       reduce using rule 126
	nil            reduce using rule 126
	not            reduce using rule 126
	true           reduce using rule 126
	'-'            reduce using rule 126
	'#'            reduce using rule 126
	'~'            reduce using rule 126
	'<'            reduce using rule 126
	'('            reduce using rule 126
	'{'            reduce using rule 126
	'...'          reduce using rule 126
	'\''           reduce using rule 126
	'"'            reduce using rule 126
	ident          reduce using rule 126
	int            reduce using rule 126
	float          reduce using rule 126


State 146

	Binop -> '<=' .                                     (rule 122)

	false          reduce using rule 122
	function       reduce using rule 122
	nil            reduce using rule 122
	not            reduce using rule 122
	true           reduce using rule 122
	'-'            reduce using rule 122
	'#'            reduce using rule 122
	'~'            reduce using rule 122
	'<'            reduce using rule 122
	'('            reduce using rule 122
	'{'            reduce using rule 122
	'...'          reduce using rule 122
	'\''           reduce using rule 122
	'"'            reduce using rule 122
	ident          reduce using rule 122
	int            reduce using rule 122
	float          reduce using rule 122


State 147

	Binop -> '>=' .                                     (rule 124)

	false          reduce using rule 124
	function       reduce using rule 124
	nil            reduce using rule 124
	not            reduce using rule 124
	true           reduce using rule 124
	'-'            reduce using rule 124
	'#'            reduce using rule 124
	'~'            reduce using rule 124
	'<'            reduce using rule 124
	'('            reduce using rule 124
	'{'            reduce using rule 124
	'...'          reduce using rule 124
	'\''           reduce using rule 124
	'"'            reduce using rule 124
	ident          reduce using rule 124
	int            reduce using rule 124
	float          reduce using rule 124


State 148

	Binop -> '<' .                                      (rule 121)

	false          reduce using rule 121
	function       reduce using rule 121
	nil            reduce using rule 121
	not            reduce using rule 121
	true           reduce using rule 121
	'-'            reduce using rule 121
	'#'            reduce using rule 121
	'~'            reduce using rule 121
	'<'            reduce using rule 121
	'('            reduce using rule 121
	'{'            reduce using rule 121
	'...'          reduce using rule 121
	'\''           reduce using rule 121
	'"'            reduce using rule 121
	ident          reduce using rule 121
	int            reduce using rule 121
	float          reduce using rule 121


State 149

	Binop -> '>' .                                      (rule 123)

	false          reduce using rule 123
	function       reduce using rule 123
	nil            reduce using rule 123
	not            reduce using rule 123
	true           reduce using rule 123
	'-'            reduce using rule 123
	'#'            reduce using rule 123
	'~'            reduce using rule 123
	'<'            reduce using rule 123
	'('            reduce using rule 123
	'{'            reduce using rule 123
	'...'          reduce using rule 123
	'\''           reduce using rule 123
	'"'            reduce using rule 123
	ident          reduce using rule 123
	int            reduce using rule 123
	float          reduce using rule 123


State 150

	Prefixexp -> '(' Exp ')' .                          (rule 85)

	and            reduce using rule 85
	break          reduce using rule 85
	do             reduce using rule 85
	else           reduce using rule 85
	elseif         reduce using rule 85
	end            reduce using rule 85
	for            reduce using rule 85
	function       reduce using rule 85
	goto           reduce using rule 85
	if             reduce using rule 85
	local          reduce using rule 85
	or             reduce using rule 85
	repeat         reduce using rule 85
	return         reduce using rule 85
	then           reduce using rule 85
	until          reduce using rule 85
	while          reduce using rule 85
	'+'            reduce using rule 85
	'-'            reduce using rule 85
	'*'            reduce using rule 85
	'/'            reduce using rule 85
	'%'            reduce using rule 85
	'^'            reduce using rule 85
	'&'            reduce using rule 85
	'~'            reduce using rule 85
	'|'            reduce using rule 85
	'<<'           reduce using rule 85
	'>>'           reduce using rule 85
	'//'           reduce using rule 85
	'=='           reduce using rule 85
	'~='           reduce using rule 85
	'<='           reduce using rule 85
	'>='           reduce using rule 85
	'<'            reduce using rule 85
	'>'            reduce using rule 85
	'('            reduce using rule 85
	')'            reduce using rule 85
	'{'            reduce using rule 85
	'}'            reduce using rule 85
	'['            reduce using rule 85
	']'            reduce using rule 85
	'::'           reduce using rule 85
	';'            reduce using rule 85
	':'            reduce using rule 85
	','            reduce using rule 85
	'.'            reduce using rule 85
	'..'           reduce using rule 85
	'\''           reduce using rule 85
	'"'            reduce using rule 85
	ident          reduce using rule 85


State 151

	Binop -> '..' .                                     (rule 120)

	false          reduce using rule 120
	function       reduce using rule 120
	nil            reduce using rule 120
	not            reduce using rule 120
	true           reduce using rule 120
	'-'            reduce using rule 120
	'#'            reduce using rule 120
	'~'            reduce using rule 120
	'<'            reduce using rule 120
	'('            reduce using rule 120
	'{'            reduce using rule 120
	'...'          reduce using rule 120
	'\''           reduce using rule 120
	'"'            reduce using rule 120
	ident          reduce using rule 120
	int            reduce using rule 120
	float          reduce using rule 120


State 152

	Exp -> Exp . Binop Exp                              (rule 81)
	Exp -> Exp Binop Exp .                              (rule 81)

	and            shift, and enter state 130
			(reduce using rule 81)

	break          reduce using rule 81
	do             reduce using rule 81
	else           reduce using rule 81
	elseif         reduce using rule 81
	end            reduce using rule 81
	for            reduce using rule 81
	function       reduce using rule 81
	goto           reduce using rule 81
	if             reduce using rule 81
	local          reduce using rule 81
	or             shift, and enter state 131
			(reduce using rule 81)

	repeat         reduce using rule 81
	return         reduce using rule 81
	then           reduce using rule 81
	until          reduce using rule 81
	while          reduce using rule 81
	'+'            shift, and enter state 132
			(reduce using rule 81)

	'-'            shift, and enter state 133
			(reduce using rule 81)

	'*'            shift, and enter state 134
			(reduce using rule 81)

	'/'            shift, and enter state 135
			(reduce using rule 81)

	'%'            shift, and enter state 136
			(reduce using rule 81)

	'^'            shift, and enter state 137
			(reduce using rule 81)

	'&'            shift, and enter state 138
			(reduce using rule 81)

	'~'            shift, and enter state 139
			(reduce using rule 81)

	'|'            shift, and enter state 140
			(reduce using rule 81)

	'<<'           shift, and enter state 141
			(reduce using rule 81)

	'>>'           shift, and enter state 142
			(reduce using rule 81)

	'//'           shift, and enter state 143
			(reduce using rule 81)

	'=='           shift, and enter state 144
			(reduce using rule 81)

	'~='           shift, and enter state 145
			(reduce using rule 81)

	'<='           shift, and enter state 146
			(reduce using rule 81)

	'>='           shift, and enter state 147
			(reduce using rule 81)

	'<'            shift, and enter state 148
			(reduce using rule 81)

	'>'            shift, and enter state 149
			(reduce using rule 81)

	'('            reduce using rule 81
	')'            reduce using rule 81
	'}'            reduce using rule 81
	']'            reduce using rule 81
	'::'           reduce using rule 81
	';'            reduce using rule 81
	','            reduce using rule 81
	'..'           shift, and enter state 151
			(reduce using rule 81)

	ident          reduce using rule 81

	Binop          goto state 129

State 153

	Funcbody -> '(' Identlist11 . ')' Block end         (rule 96)
	Funcbody -> '(' Identlist11 . ',' '...' ')' Block end    (rule 97)

	')'            shift, and enter state 213
	','            shift, and enter state 214


State 154

	Funcbody -> '(' ')' . Block end                     (rule 94)

	break          shift, and enter state 67
	do             shift, and enter state 68
	end            reduce using rule 22
	for            shift, and enter state 69
	function       shift, and enter state 70
	goto           shift, and enter state 71
	if             shift, and enter state 72
	local          shift, and enter state 73
	repeat         shift, and enter state 74
	return         shift, and enter state 75
	while          shift, and enter state 76
	'('            shift, and enter state 19
	'::'           shift, and enter state 77
	';'            shift, and enter state 78
	ident          shift, and enter state 20

	Block          goto state 212
	Stat           goto state 58
	If             goto state 59
	If1            goto state 60
	Retstat        goto state 61
	Label          goto state 62
	Varlist1       goto state 63
	Varlist11      goto state 64
	Var            goto state 65
	Ident          goto state 16
	Prefixexp      goto state 17
	Funccall       goto state 66

State 155

	Funcbody -> '(' '...' . ')' Block end               (rule 95)

	')'            shift, and enter state 211


State 156

	Exp -> '<' Typing '>' .                             (rule 80)

	and            reduce using rule 80
	break          reduce using rule 80
	do             reduce using rule 80
	else           reduce using rule 80
	elseif         reduce using rule 80
	end            reduce using rule 80
	for            reduce using rule 80
	function       reduce using rule 80
	goto           reduce using rule 80
	if             reduce using rule 80
	local          reduce using rule 80
	or             reduce using rule 80
	repeat         reduce using rule 80
	return         reduce using rule 80
	then           reduce using rule 80
	until          reduce using rule 80
	while          reduce using rule 80
	'+'            reduce using rule 80
	'-'            reduce using rule 80
	'*'            reduce using rule 80
	'/'            reduce using rule 80
	'%'            reduce using rule 80
	'^'            reduce using rule 80
	'&'            reduce using rule 80
	'~'            reduce using rule 80
	'|'            reduce using rule 80
	'<<'           reduce using rule 80
	'>>'           reduce using rule 80
	'//'           reduce using rule 80
	'=='           reduce using rule 80
	'~='           reduce using rule 80
	'<='           reduce using rule 80
	'>='           reduce using rule 80
	'<'            reduce using rule 80
	'>'            reduce using rule 80
	'('            reduce using rule 80
	')'            reduce using rule 80
	'}'            reduce using rule 80
	']'            reduce using rule 80
	'::'           reduce using rule 80
	';'            reduce using rule 80
	','            reduce using rule 80
	'..'           reduce using rule 80
	ident          reduce using rule 80


State 157

	Exp -> Exp . Binop Exp                              (rule 81)
	Field -> '[' Exp . ']' '=' Exp                      (rule 105)

	and            shift, and enter state 130
	or             shift, and enter state 131
	'+'            shift, and enter state 132
	'-'            shift, and enter state 133
	'*'            shift, and enter state 134
	'/'            shift, and enter state 135
	'%'            shift, and enter state 136
	'^'            shift, and enter state 137
	'&'            shift, and enter state 138
	'~'            shift, and enter state 139
	'|'            shift, and enter state 140
	'<<'           shift, and enter state 141
	'>>'           shift, and enter state 142
	'//'           shift, and enter state 143
	'=='           shift, and enter state 144
	'~='           shift, and enter state 145
	'<='           shift, and enter state 146
	'>='           shift, and enter state 147
	'<'            shift, and enter state 148
	'>'            shift, and enter state 149
	']'            shift, and enter state 210
	'..'           shift, and enter state 151

	Binop          goto state 129

State 158

	Fieldlist -> Field ';' . Fieldlist                  (rule 104)

	false          shift, and enter state 28
	function       shift, and enter state 29
	nil            shift, and enter state 30
	not            shift, and enter state 31
	true           shift, and enter state 32
	'-'            shift, and enter state 33
	'#'            shift, and enter state 34
	'~'            shift, and enter state 35
	'<'            shift, and enter state 36
	'('            shift, and enter state 19
	'{'            shift, and enter state 37
	'['            shift, and enter state 124
	'...'          shift, and enter state 38
	'\''           shift, and enter state 39
	'"'            shift, and enter state 40
	ident          shift, and enter state 20
	int            shift, and enter state 41
	float          shift, and enter state 42

	Var            goto state 15
	Ident          goto state 119
	Exp            goto state 120
	Prefixexp      goto state 23
	Funccall       goto state 24
	Tableconstructorgoto state 25
	Fieldlist      goto state 209
	Field          goto state 122
	Unop           goto state 26
	String         goto state 27

State 159

	Fieldlist -> Field ',' . Fieldlist                  (rule 103)

	false          shift, and enter state 28
	function       shift, and enter state 29
	nil            shift, and enter state 30
	not            shift, and enter state 31
	true           shift, and enter state 32
	'-'            shift, and enter state 33
	'#'            shift, and enter state 34
	'~'            shift, and enter state 35
	'<'            shift, and enter state 36
	'('            shift, and enter state 19
	'{'            shift, and enter state 37
	'['            shift, and enter state 124
	'...'          shift, and enter state 38
	'\''           shift, and enter state 39
	'"'            shift, and enter state 40
	ident          shift, and enter state 20
	int            shift, and enter state 41
	float          shift, and enter state 42

	Var            goto state 15
	Ident          goto state 119
	Exp            goto state 120
	Prefixexp      goto state 23
	Funccall       goto state 24
	Tableconstructorgoto state 25
	Fieldlist      goto state 208
	Field          goto state 122
	Unop           goto state 26
	String         goto state 27

State 160

	Tableconstructor -> '{' Fieldlist '}' .             (rule 99)

	and            reduce using rule 99
	break          reduce using rule 99
	do             reduce using rule 99
	else           reduce using rule 99
	elseif         reduce using rule 99
	end            reduce using rule 99
	for            reduce using rule 99
	function       reduce using rule 99
	goto           reduce using rule 99
	if             reduce using rule 99
	local          reduce using rule 99
	or             reduce using rule 99
	repeat         reduce using rule 99
	return         reduce using rule 99
	then           reduce using rule 99
	until          reduce using rule 99
	while          reduce using rule 99
	'+'            reduce using rule 99
	'-'            reduce using rule 99
	'*'            reduce using rule 99
	'/'            reduce using rule 99
	'%'            reduce using rule 99
	'^'            reduce using rule 99
	'&'            reduce using rule 99
	'~'            reduce using rule 99
	'|'            reduce using rule 99
	'<<'           reduce using rule 99
	'>>'           reduce using rule 99
	'//'           reduce using rule 99
	'=='           reduce using rule 99
	'~='           reduce using rule 99
	'<='           reduce using rule 99
	'>='           reduce using rule 99
	'<'            reduce using rule 99
	'>'            reduce using rule 99
	'('            reduce using rule 99
	')'            reduce using rule 99
	'{'            reduce using rule 99
	'}'            reduce using rule 99
	'['            reduce using rule 99
	']'            reduce using rule 99
	'::'           reduce using rule 99
	';'            reduce using rule 99
	':'            reduce using rule 99
	','            reduce using rule 99
	'.'            reduce using rule 99
	'..'           reduce using rule 99
	'\''           reduce using rule 99
	'"'            reduce using rule 99
	ident          reduce using rule 99
	%eof           reduce using rule 99


State 161

	Tableconstructor -> '{' Fieldlist ';' . '}'         (rule 101)

	'}'            shift, and enter state 207


State 162

	Tableconstructor -> '{' Fieldlist ',' . '}'         (rule 100)

	'}'            shift, and enter state 206


State 163

	Field -> Ident '=' . Exp                            (rule 106)

	false          shift, and enter state 28
	function       shift, and enter state 29
	nil            shift, and enter state 30
	not            shift, and enter state 31
	true           shift, and enter state 32
	'-'            shift, and enter state 33
	'#'            shift, and enter state 34
	'~'            shift, and enter state 35
	'<'            shift, and enter state 36
	'('            shift, and enter state 19
	'{'            shift, and enter state 37
	'...'          shift, and enter state 38
	'\''           shift, and enter state 39
	'"'            shift, and enter state 40
	ident          shift, and enter state 20
	int            shift, and enter state 41
	float          shift, and enter state 42

	Var            goto state 15
	Ident          goto state 16
	Exp            goto state 205
	Prefixexp      goto state 23
	Funccall       goto state 24
	Tableconstructorgoto state 25
	Unop           goto state 26
	String         goto state 27

State 164

	String -> '\'' string '\'' .                        (rule 133)

	and            reduce using rule 133
	break          reduce using rule 133
	do             reduce using rule 133
	else           reduce using rule 133
	elseif         reduce using rule 133
	end            reduce using rule 133
	for            reduce using rule 133
	function       reduce using rule 133
	goto           reduce using rule 133
	if             reduce using rule 133
	local          reduce using rule 133
	or             reduce using rule 133
	repeat         reduce using rule 133
	return         reduce using rule 133
	then           reduce using rule 133
	until          reduce using rule 133
	while          reduce using rule 133
	'+'            reduce using rule 133
	'-'            reduce using rule 133
	'*'            reduce using rule 133
	'/'            reduce using rule 133
	'%'            reduce using rule 133
	'^'            reduce using rule 133
	'&'            reduce using rule 133
	'~'            reduce using rule 133
	'|'            reduce using rule 133
	'<<'           reduce using rule 133
	'>>'           reduce using rule 133
	'//'           reduce using rule 133
	'=='           reduce using rule 133
	'~='           reduce using rule 133
	'<='           reduce using rule 133
	'>='           reduce using rule 133
	'<'            reduce using rule 133
	'>'            reduce using rule 133
	'('            reduce using rule 133
	')'            reduce using rule 133
	'{'            reduce using rule 133
	'}'            reduce using rule 133
	'['            reduce using rule 133
	']'            reduce using rule 133
	'::'           reduce using rule 133
	';'            reduce using rule 133
	':'            reduce using rule 133
	','            reduce using rule 133
	'.'            reduce using rule 133
	'..'           reduce using rule 133
	'\''           reduce using rule 133
	'"'            reduce using rule 133
	ident          reduce using rule 133
	%eof           reduce using rule 133


State 165

	String -> '"' string '"' .                          (rule 134)

	and            reduce using rule 134
	break          reduce using rule 134
	do             reduce using rule 134
	else           reduce using rule 134
	elseif         reduce using rule 134
	end            reduce using rule 134
	for            reduce using rule 134
	function       reduce using rule 134
	goto           reduce using rule 134
	if             reduce using rule 134
	local          reduce using rule 134
	or             reduce using rule 134
	repeat         reduce using rule 134
	return         reduce using rule 134
	then           reduce using rule 134
	until          reduce using rule 134
	while          reduce using rule 134
	'+'            reduce using rule 134
	'-'            reduce using rule 134
	'*'            reduce using rule 134
	'/'            reduce using rule 134
	'%'            reduce using rule 134
	'^'            reduce using rule 134
	'&'            reduce using rule 134
	'~'            reduce using rule 134
	'|'            reduce using rule 134
	'<<'           reduce using rule 134
	'>>'           reduce using rule 134
	'//'           reduce using rule 134
	'=='           reduce using rule 134
	'~='           reduce using rule 134
	'<='           reduce using rule 134
	'>='           reduce using rule 134
	'<'            reduce using rule 134
	'>'            reduce using rule 134
	'('            reduce using rule 134
	')'            reduce using rule 134
	'{'            reduce using rule 134
	'}'            reduce using rule 134
	'['            reduce using rule 134
	']'            reduce using rule 134
	'::'           reduce using rule 134
	';'            reduce using rule 134
	':'            reduce using rule 134
	','            reduce using rule 134
	'.'            reduce using rule 134
	'..'           reduce using rule 134
	'\''           reduce using rule 134
	'"'            reduce using rule 134
	ident          reduce using rule 134
	%eof           reduce using rule 134


State 166

	Args -> '(' Explist ')' .                           (rule 88)

	and            reduce using rule 88
	break          reduce using rule 88
	do             reduce using rule 88
	else           reduce using rule 88
	elseif         reduce using rule 88
	end            reduce using rule 88
	for            reduce using rule 88
	function       reduce using rule 88
	goto           reduce using rule 88
	if             reduce using rule 88
	local          reduce using rule 88
	or             reduce using rule 88
	repeat         reduce using rule 88
	return         reduce using rule 88
	then           reduce using rule 88
	until          reduce using rule 88
	while          reduce using rule 88
	'+'            reduce using rule 88
	'-'            reduce using rule 88
	'*'            reduce using rule 88
	'/'            reduce using rule 88
	'%'            reduce using rule 88
	'^'            reduce using rule 88
	'&'            reduce using rule 88
	'~'            reduce using rule 88
	'|'            reduce using rule 88
	'<<'           reduce using rule 88
	'>>'           reduce using rule 88
	'//'           reduce using rule 88
	'=='           reduce using rule 88
	'~='           reduce using rule 88
	'<='           reduce using rule 88
	'>='           reduce using rule 88
	'<'            reduce using rule 88
	'>'            reduce using rule 88
	'('            reduce using rule 88
	')'            reduce using rule 88
	'{'            reduce using rule 88
	'}'            reduce using rule 88
	'['            reduce using rule 88
	']'            reduce using rule 88
	'::'           reduce using rule 88
	';'            reduce using rule 88
	':'            reduce using rule 88
	','            reduce using rule 88
	'.'            reduce using rule 88
	'..'           reduce using rule 88
	'\''           reduce using rule 88
	'"'            reduce using rule 88
	ident          reduce using rule 88
	%eof           reduce using rule 88


State 167

	Var -> Prefixexp '[' Exp ']' .                      (rule 59)

	and            reduce using rule 59
	break          reduce using rule 59
	do             reduce using rule 59
	else           reduce using rule 59
	elseif         reduce using rule 59
	end            reduce using rule 59
	for            reduce using rule 59
	function       reduce using rule 59
	goto           reduce using rule 59
	if             reduce using rule 59
	local          reduce using rule 59
	or             reduce using rule 59
	repeat         reduce using rule 59
	return         reduce using rule 59
	then           reduce using rule 59
	until          reduce using rule 59
	while          reduce using rule 59
	'+'            reduce using rule 59
	'-'            reduce using rule 59
	'*'            reduce using rule 59
	'/'            reduce using rule 59
	'%'            reduce using rule 59
	'^'            reduce using rule 59
	'&'            reduce using rule 59
	'~'            reduce using rule 59
	'|'            reduce using rule 59
	'<<'           reduce using rule 59
	'>>'           reduce using rule 59
	'//'           reduce using rule 59
	'=='           reduce using rule 59
	'~='           reduce using rule 59
	'<='           reduce using rule 59
	'>='           reduce using rule 59
	'<'            reduce using rule 59
	'>'            reduce using rule 59
	'='            reduce using rule 59
	'('            reduce using rule 59
	')'            reduce using rule 59
	'{'            reduce using rule 59
	'}'            reduce using rule 59
	'['            reduce using rule 59
	']'            reduce using rule 59
	'::'           reduce using rule 59
	';'            reduce using rule 59
	':'            reduce using rule 59
	','            reduce using rule 59
	'.'            reduce using rule 59
	'..'           reduce using rule 59
	'\''           reduce using rule 59
	'"'            reduce using rule 59
	ident          reduce using rule 59


State 168

	Funccall -> Prefixexp ':' Ident Args .              (rule 87)

	and            reduce using rule 87
	break          reduce using rule 87
	do             reduce using rule 87
	else           reduce using rule 87
	elseif         reduce using rule 87
	end            reduce using rule 87
	for            reduce using rule 87
	function       reduce using rule 87
	goto           reduce using rule 87
	if             reduce using rule 87
	local          reduce using rule 87
	or             reduce using rule 87
	repeat         reduce using rule 87
	return         reduce using rule 87
	then           reduce using rule 87
	until          reduce using rule 87
	while          reduce using rule 87
	'+'            reduce using rule 87
	'-'            reduce using rule 87
	'*'            reduce using rule 87
	'/'            reduce using rule 87
	'%'            reduce using rule 87
	'^'            reduce using rule 87
	'&'            reduce using rule 87
	'~'            reduce using rule 87
	'|'            reduce using rule 87
	'<<'           reduce using rule 87
	'>>'           reduce using rule 87
	'//'           reduce using rule 87
	'=='           reduce using rule 87
	'~='           reduce using rule 87
	'<='           reduce using rule 87
	'>='           reduce using rule 87
	'<'            reduce using rule 87
	'>'            reduce using rule 87
	'('            reduce using rule 87
	')'            reduce using rule 87
	'{'            reduce using rule 87
	'}'            reduce using rule 87
	'['            reduce using rule 87
	']'            reduce using rule 87
	'::'           reduce using rule 87
	';'            reduce using rule 87
	':'            reduce using rule 87
	','            reduce using rule 87
	'.'            reduce using rule 87
	'..'           reduce using rule 87
	'\''           reduce using rule 87
	'"'            reduce using rule 87
	ident          reduce using rule 87
	%eof           reduce using rule 87


State 169

	TypingArgs -> '<' Typing '>' TypingArgs .           (rule 92)

	and            reduce using rule 92
	break          reduce using rule 92
	do             reduce using rule 92
	else           reduce using rule 92
	elseif         reduce using rule 92
	end            reduce using rule 92
	for            reduce using rule 92
	function       reduce using rule 92
	goto           reduce using rule 92
	if             reduce using rule 92
	local          reduce using rule 92
	or             reduce using rule 92
	repeat         reduce using rule 92
	return         reduce using rule 92
	then           reduce using rule 92
	until          reduce using rule 92
	while          reduce using rule 92
	'+'            reduce using rule 92
	'-'            reduce using rule 92
	'*'            reduce using rule 92
	'/'            reduce using rule 92
	'%'            reduce using rule 92
	'^'            reduce using rule 92
	'&'            reduce using rule 92
	'~'            reduce using rule 92
	'|'            reduce using rule 92
	'<<'           reduce using rule 92
	'>>'           reduce using rule 92
	'//'           reduce using rule 92
	'=='           reduce using rule 92
	'~='           reduce using rule 92
	'<='           reduce using rule 92
	'>='           reduce using rule 92
	'<'            reduce using rule 92
	'>'            reduce using rule 92
	'('            reduce using rule 92
	')'            reduce using rule 92
	'{'            reduce using rule 92
	'}'            reduce using rule 92
	'['            reduce using rule 92
	']'            reduce using rule 92
	'::'           reduce using rule 92
	';'            reduce using rule 92
	':'            reduce using rule 92
	','            reduce using rule 92
	'.'            reduce using rule 92
	'..'           reduce using rule 92
	'\''           reduce using rule 92
	'"'            reduce using rule 92
	ident          reduce using rule 92
	%eof           reduce using rule 92


State 170

	Typing1 -> '[' Math ']' Typing1 .                   (rule 7)

	'>'            reduce using rule 7
	%eof           reduce using rule 7


State 171

	Mathbit -> Mathbit . Mathbinop Mathbit              (rule 16)
	Mathbit -> Mathbit Mathbinop Mathbit .              (rule 16)

	'^'            shift, and enter state 109
			(reduce using rule 16)

	'_'            shift, and enter state 110
			(reduce using rule 16)

	'{'            reduce using rule 16
	'}'            reduce using rule 16
	']'            reduce using rule 16
	inline         reduce using rule 16
	symbol         reduce using rule 16

	Mathbinop      goto state 108

State 172

	Mathbit -> '{' . Math '}'                           (rule 15)

	'{'            shift, and enter state 55
	'}'            reduce using rule 11
	inline         shift, and enter state 9
	symbol         shift, and enter state 56

	Math           goto state 105
	Mathbit        goto state 53
	Kailua         goto state 54

State 173

	Mathbit -> '{' Math '}' .                           (rule 15)

	'^'            reduce using rule 15
	'_'            reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	']'            reduce using rule 15
	inline         reduce using rule 15
	symbol         reduce using rule 15


State 174

	If -> If1 else Block . end                          (rule 42)

	end            shift, and enter state 204


State 175

	Stat -> Varlist1 '=' Explist1 .                     (rule 25)

	break          reduce using rule 25
	do             reduce using rule 25
	else           reduce using rule 25
	elseif         reduce using rule 25
	end            reduce using rule 25
	for            reduce using rule 25
	function       reduce using rule 25
	goto           reduce using rule 25
	if             reduce using rule 25
	local          reduce using rule 25
	repeat         reduce using rule 25
	return         reduce using rule 25
	until          reduce using rule 25
	while          reduce using rule 25
	'('            reduce using rule 25
	'}'            reduce using rule 25
	'::'           reduce using rule 25
	';'            reduce using rule 25
	ident          reduce using rule 25


State 176

	Explist1 -> Explist11 .                             (rule 67)

	break          reduce using rule 67
	do             reduce using rule 67
	else           reduce using rule 67
	elseif         reduce using rule 67
	end            reduce using rule 67
	for            reduce using rule 67
	function       reduce using rule 67
	goto           reduce using rule 67
	if             reduce using rule 67
	local          reduce using rule 67
	repeat         reduce using rule 67
	return         reduce using rule 67
	until          reduce using rule 67
	while          reduce using rule 67
	'('            reduce using rule 67
	'}'            reduce using rule 67
	'::'           reduce using rule 67
	';'            reduce using rule 67
	ident          reduce using rule 67


State 177

	Varlist11 -> Var ',' Varlist11 .                    (rule 57)

	'='            reduce using rule 57


State 178

	Stat -> do Block end .                              (rule 30)

	break          reduce using rule 30
	do             reduce using rule 30
	else           reduce using rule 30
	elseif         reduce using rule 30
	end            reduce using rule 30
	for            reduce using rule 30
	function       reduce using rule 30
	goto           reduce using rule 30
	if             reduce using rule 30
	local          reduce using rule 30
	repeat         reduce using rule 30
	return         reduce using rule 30
	until          reduce using rule 30
	while          reduce using rule 30
	'('            reduce using rule 30
	'}'            reduce using rule 30
	'::'           reduce using rule 30
	';'            reduce using rule 30
	ident          reduce using rule 30


State 179

	Stat -> for Ident '=' . Exp ',' Exp do Block end    (rule 34)
	Stat -> for Ident '=' . Exp ',' Exp ',' Exp do Block end    (rule 35)

	false          shift, and enter state 28
	function       shift, and enter state 29
	nil            shift, and enter state 30
	not            shift, and enter state 31
	true           shift, and enter state 32
	'-'            shift, and enter state 33
	'#'            shift, and enter state 34
	'~'            shift, and enter state 35
	'<'            shift, and enter state 36
	'('            shift, and enter state 19
	'{'            shift, and enter state 37
	'...'          shift, and enter state 38
	'\''           shift, and enter state 39
	'"'            shift, and enter state 40
	ident          shift, and enter state 20
	int            shift, and enter state 41
	float          shift, and enter state 42

	Var            goto state 15
	Ident          goto state 16
	Exp            goto state 203
	Prefixexp      goto state 23
	Funccall       goto state 24
	Tableconstructorgoto state 25
	Unop           goto state 26
	String         goto state 27

State 180

	Identlist11 -> Ident ',' . Identlist11              (rule 63)

	ident          shift, and enter state 20

	Identlist11    goto state 202
	Ident          goto state 89

State 181

	Stat -> for Identlist1 in . Explist1 do Block end    (rule 36)

	false          shift, and enter state 28
	function       shift, and enter state 29
	nil            shift, and enter state 30
	not            shift, and enter state 31
	true           shift, and enter state 32
	'-'            shift, and enter state 33
	'#'            shift, and enter state 34
	'~'            shift, and enter state 35
	'<'            shift, and enter state 36
	'('            shift, and enter state 19
	'{'            shift, and enter state 37
	'...'          shift, and enter state 38
	'\''           shift, and enter state 39
	'"'            shift, and enter state 40
	ident          shift, and enter state 20
	int            shift, and enter state 41
	float          shift, and enter state 42

	Var            goto state 15
	Ident          goto state 16
	Explist1       goto state 201
	Explist11      goto state 176
	Exp            goto state 85
	Prefixexp      goto state 23
	Funccall       goto state 24
	Tableconstructorgoto state 25
	Unop           goto state 26
	String         goto state 27

State 182

	Funcname1 -> Ident '.' . Funcname1                  (rule 54)

	ident          shift, and enter state 20

	Funcname1      goto state 200
	Ident          goto state 95

State 183

	Funcname -> Funcname1 ':' . Ident                   (rule 52)

	ident          shift, and enter state 20

	Ident          goto state 199

State 184

	Stat -> function Funcname Funcbody .                (rule 37)

	break          reduce using rule 37
	do             reduce using rule 37
	else           reduce using rule 37
	elseif         reduce using rule 37
	end            reduce using rule 37
	for            reduce using rule 37
	function       reduce using rule 37
	goto           reduce using rule 37
	if             reduce using rule 37
	local          reduce using rule 37
	repeat         reduce using rule 37
	return         reduce using rule 37
	until          reduce using rule 37
	while          reduce using rule 37
	'('            reduce using rule 37
	'}'            reduce using rule 37
	'::'           reduce using rule 37
	';'            reduce using rule 37
	ident          reduce using rule 37


State 185

	If1 -> if Exp then . Block ElseIf                   (rule 43)
	If1 -> if Exp then . Block                          (rule 44)

	break          shift, and enter state 67
	do             shift, and enter state 68
	else           reduce using rule 22
	elseif         reduce using rule 22
	end            reduce using rule 22
	for            shift, and enter state 69
	function       shift, and enter state 70
	goto           shift, and enter state 71
	if             shift, and enter state 72
	local          shift, and enter state 73
	repeat         shift, and enter state 74
	return         shift, and enter state 75
	while          shift, and enter state 76
	'('            shift, and enter state 19
	'::'           shift, and enter state 77
	';'            shift, and enter state 78
	ident          shift, and enter state 20

	Block          goto state 198
	Stat           goto state 58
	If             goto state 59
	If1            goto state 60
	Retstat        goto state 61
	Label          goto state 62
	Varlist1       goto state 63
	Varlist11      goto state 64
	Var            goto state 65
	Ident          goto state 16
	Prefixexp      goto state 17
	Funccall       goto state 66

State 186

	Stat -> local function Ident . Funcbody             (rule 38)

	'('            shift, and enter state 127

	Funcbody       goto state 197

State 187

	Stat -> local Identlist1 '=' . Explist              (rule 40)

	break          reduce using rule 66
	do             reduce using rule 66
	else           reduce using rule 66
	elseif         reduce using rule 66
	end            reduce using rule 66
	false          shift, and enter state 28
	for            reduce using rule 66
	function       shift, and enter state 29
			(reduce using rule 66)

	goto           reduce using rule 66
	if             reduce using rule 66
	local          reduce using rule 66
	nil            shift, and enter state 30
	not            shift, and enter state 31
	repeat         reduce using rule 66
	return         reduce using rule 66
	true           shift, and enter state 32
	until          reduce using rule 66
	while          reduce using rule 66
	'-'            shift, and enter state 33
	'#'            shift, and enter state 34
	'~'            shift, and enter state 35
	'<'            shift, and enter state 36
	'('            shift, and enter state 19
			(reduce using rule 66)

	'{'            shift, and enter state 37
	'}'            reduce using rule 66
	'::'           reduce using rule 66
	';'            reduce using rule 66
	'...'          shift, and enter state 38
	'\''           shift, and enter state 39
	'"'            shift, and enter state 40
	ident          shift, and enter state 20
			(reduce using rule 66)

	int            shift, and enter state 41
	float          shift, and enter state 42

	Var            goto state 15
	Ident          goto state 16
	Explist        goto state 196
	Explist11      goto state 84
	Exp            goto state 85
	Prefixexp      goto state 23
	Funccall       goto state 24
	Tableconstructorgoto state 25
	Unop           goto state 26
	String         goto state 27

State 188

	Stat -> repeat Block until . Exp                    (rule 32)

	false          shift, and enter state 28
	function       shift, and enter state 29
	nil            shift, and enter state 30
	not            shift, and enter state 31
	true           shift, and enter state 32
	'-'            shift, and enter state 33
	'#'            shift, and enter state 34
	'~'            shift, and enter state 35
	'<'            shift, and enter state 36
	'('            shift, and enter state 19
	'{'            shift, and enter state 37
	'...'          shift, and enter state 38
	'\''           shift, and enter state 39
	'"'            shift, and enter state 40
	ident          shift, and enter state 20
	int            shift, and enter state 41
	float          shift, and enter state 42

	Var            goto state 15
	Ident          goto state 16
	Exp            goto state 195
	Prefixexp      goto state 23
	Funccall       goto state 24
	Tableconstructorgoto state 25
	Unop           goto state 26
	String         goto state 27

State 189

	Explist11 -> Exp ',' . Explist11                    (rule 69)

	false          shift, and enter state 28
	function       shift, and enter state 29
	nil            shift, and enter state 30
	not            shift, and enter state 31
	true           shift, and enter state 32
	'-'            shift, and enter state 33
	'#'            shift, and enter state 34
	'~'            shift, and enter state 35
	'<'            shift, and enter state 36
	'('            shift, and enter state 19
	'{'            shift, and enter state 37
	'...'          shift, and enter state 38
	'\''           shift, and enter state 39
	'"'            shift, and enter state 40
	ident          shift, and enter state 20
	int            shift, and enter state 41
	float          shift, and enter state 42

	Var            goto state 15
	Ident          goto state 16
	Explist11      goto state 194
	Exp            goto state 85
	Prefixexp      goto state 23
	Funccall       goto state 24
	Tableconstructorgoto state 25
	Unop           goto state 26
	String         goto state 27

State 190

	Retstat -> return Explist ';' .                     (rule 49)

	else           reduce using rule 49
	elseif         reduce using rule 49
	end            reduce using rule 49
	until          reduce using rule 49
	'}'            reduce using rule 49


State 191

	Stat -> while Exp do . Block end                    (rule 31)

	break          shift, and enter state 67
	do             shift, and enter state 68
	end            reduce using rule 22
	for            shift, and enter state 69
	function       shift, and enter state 70
	goto           shift, and enter state 71
	if             shift, and enter state 72
	local          shift, and enter state 73
	repeat         shift, and enter state 74
	return         shift, and enter state 75
	while          shift, and enter state 76
	'('            shift, and enter state 19
	'::'           shift, and enter state 77
	';'            shift, and enter state 78
	ident          shift, and enter state 20

	Block          goto state 193
	Stat           goto state 58
	If             goto state 59
	If1            goto state 60
	Retstat        goto state 61
	Label          goto state 62
	Varlist1       goto state 63
	Varlist11      goto state 64
	Var            goto state 65
	Ident          goto state 16
	Prefixexp      goto state 17
	Funccall       goto state 66

State 192

	Label -> '::' Ident '::' .                          (rule 50)

	break          reduce using rule 50
	do             reduce using rule 50
	else           reduce using rule 50
	elseif         reduce using rule 50
	end            reduce using rule 50
	for            reduce using rule 50
	function       reduce using rule 50
	goto           reduce using rule 50
	if             reduce using rule 50
	local          reduce using rule 50
	repeat         reduce using rule 50
	return         reduce using rule 50
	until          reduce using rule 50
	while          reduce using rule 50
	'('            reduce using rule 50
	'}'            reduce using rule 50
	'::'           reduce using rule 50
	';'            reduce using rule 50
	ident          reduce using rule 50


State 193

	Stat -> while Exp do Block . end                    (rule 31)

	end            shift, and enter state 225


State 194

	Explist11 -> Exp ',' Explist11 .                    (rule 69)

	break          reduce using rule 69
	do             reduce using rule 69
	else           reduce using rule 69
	elseif         reduce using rule 69
	end            reduce using rule 69
	for            reduce using rule 69
	function       reduce using rule 69
	goto           reduce using rule 69
	if             reduce using rule 69
	local          reduce using rule 69
	repeat         reduce using rule 69
	return         reduce using rule 69
	until          reduce using rule 69
	while          reduce using rule 69
	'('            reduce using rule 69
	')'            reduce using rule 69
	'}'            reduce using rule 69
	'::'           reduce using rule 69
	';'            reduce using rule 69
	ident          reduce using rule 69


State 195

	Stat -> repeat Block until Exp .                    (rule 32)
	Exp -> Exp . Binop Exp                              (rule 81)

	and            shift, and enter state 130
	break          reduce using rule 32
	do             reduce using rule 32
	else           reduce using rule 32
	elseif         reduce using rule 32
	end            reduce using rule 32
	for            reduce using rule 32
	function       reduce using rule 32
	goto           reduce using rule 32
	if             reduce using rule 32
	local          reduce using rule 32
	or             shift, and enter state 131
	repeat         reduce using rule 32
	return         reduce using rule 32
	until          reduce using rule 32
	while          reduce using rule 32
	'+'            shift, and enter state 132
	'-'            shift, and enter state 133
	'*'            shift, and enter state 134
	'/'            shift, and enter state 135
	'%'            shift, and enter state 136
	'^'            shift, and enter state 137
	'&'            shift, and enter state 138
	'~'            shift, and enter state 139
	'|'            shift, and enter state 140
	'<<'           shift, and enter state 141
	'>>'           shift, and enter state 142
	'//'           shift, and enter state 143
	'=='           shift, and enter state 144
	'~='           shift, and enter state 145
	'<='           shift, and enter state 146
	'>='           shift, and enter state 147
	'<'            shift, and enter state 148
	'>'            shift, and enter state 149
	'('            reduce using rule 32
	'}'            reduce using rule 32
	'::'           reduce using rule 32
	';'            reduce using rule 32
	'..'           shift, and enter state 151
	ident          reduce using rule 32

	Binop          goto state 129

State 196

	Stat -> local Identlist1 '=' Explist .              (rule 40)

	break          reduce using rule 40
	do             reduce using rule 40
	else           reduce using rule 40
	elseif         reduce using rule 40
	end            reduce using rule 40
	for            reduce using rule 40
	function       reduce using rule 40
	goto           reduce using rule 40
	if             reduce using rule 40
	local          reduce using rule 40
	repeat         reduce using rule 40
	return         reduce using rule 40
	until          reduce using rule 40
	while          reduce using rule 40
	'('            reduce using rule 40
	'}'            reduce using rule 40
	'::'           reduce using rule 40
	';'            reduce using rule 40
	ident          reduce using rule 40


State 197

	Stat -> local function Ident Funcbody .             (rule 38)

	break          reduce using rule 38
	do             reduce using rule 38
	else           reduce using rule 38
	elseif         reduce using rule 38
	end            reduce using rule 38
	for            reduce using rule 38
	function       reduce using rule 38
	goto           reduce using rule 38
	if             reduce using rule 38
	local          reduce using rule 38
	repeat         reduce using rule 38
	return         reduce using rule 38
	until          reduce using rule 38
	while          reduce using rule 38
	'('            reduce using rule 38
	'}'            reduce using rule 38
	'::'           reduce using rule 38
	';'            reduce using rule 38
	ident          reduce using rule 38


State 198

	If1 -> if Exp then Block . ElseIf                   (rule 43)
	If1 -> if Exp then Block .                          (rule 44)

	else           reduce using rule 44
	elseif         shift, and enter state 224
	end            reduce using rule 44

	ElseIf         goto state 222
	ElseIf1        goto state 223

State 199

	Funcname -> Funcname1 ':' Ident .                   (rule 52)

	'('            reduce using rule 52


State 200

	Funcname1 -> Ident '.' Funcname1 .                  (rule 54)

	'('            reduce using rule 54
	':'            reduce using rule 54


State 201

	Stat -> for Identlist1 in Explist1 . do Block end    (rule 36)

	do             shift, and enter state 221


State 202

	Identlist11 -> Ident ',' Identlist11 .              (rule 63)

	break          reduce using rule 63
	do             reduce using rule 63
	else           reduce using rule 63
	elseif         reduce using rule 63
	end            reduce using rule 63
	for            reduce using rule 63
	function       reduce using rule 63
	goto           reduce using rule 63
	if             reduce using rule 63
	in             reduce using rule 63
	local          reduce using rule 63
	repeat         reduce using rule 63
	return         reduce using rule 63
	until          reduce using rule 63
	while          reduce using rule 63
	'='            reduce using rule 63
	'('            reduce using rule 63
	')'            reduce using rule 63
	'}'            reduce using rule 63
	'::'           reduce using rule 63
	';'            reduce using rule 63
	','            reduce using rule 63
	ident          reduce using rule 63


State 203

	Stat -> for Ident '=' Exp . ',' Exp do Block end    (rule 34)
	Stat -> for Ident '=' Exp . ',' Exp ',' Exp do Block end    (rule 35)
	Exp -> Exp . Binop Exp                              (rule 81)

	and            shift, and enter state 130
	or             shift, and enter state 131
	'+'            shift, and enter state 132
	'-'            shift, and enter state 133
	'*'            shift, and enter state 134
	'/'            shift, and enter state 135
	'%'            shift, and enter state 136
	'^'            shift, and enter state 137
	'&'            shift, and enter state 138
	'~'            shift, and enter state 139
	'|'            shift, and enter state 140
	'<<'           shift, and enter state 141
	'>>'           shift, and enter state 142
	'//'           shift, and enter state 143
	'=='           shift, and enter state 144
	'~='           shift, and enter state 145
	'<='           shift, and enter state 146
	'>='           shift, and enter state 147
	'<'            shift, and enter state 148
	'>'            shift, and enter state 149
	','            shift, and enter state 220
	'..'           shift, and enter state 151

	Binop          goto state 129

State 204

	If -> If1 else Block end .                          (rule 42)

	break          reduce using rule 42
	do             reduce using rule 42
	else           reduce using rule 42
	elseif         reduce using rule 42
	end            reduce using rule 42
	for            reduce using rule 42
	function       reduce using rule 42
	goto           reduce using rule 42
	if             reduce using rule 42
	local          reduce using rule 42
	repeat         reduce using rule 42
	return         reduce using rule 42
	until          reduce using rule 42
	while          reduce using rule 42
	'('            reduce using rule 42
	'}'            reduce using rule 42
	'::'           reduce using rule 42
	';'            reduce using rule 42
	ident          reduce using rule 42


State 205

	Exp -> Exp . Binop Exp                              (rule 81)
	Field -> Ident '=' Exp .                            (rule 106)

	and            shift, and enter state 130
	or             shift, and enter state 131
	'+'            shift, and enter state 132
	'-'            shift, and enter state 133
	'*'            shift, and enter state 134
	'/'            shift, and enter state 135
	'%'            shift, and enter state 136
	'^'            shift, and enter state 137
	'&'            shift, and enter state 138
	'~'            shift, and enter state 139
	'|'            shift, and enter state 140
	'<<'           shift, and enter state 141
	'>>'           shift, and enter state 142
	'//'           shift, and enter state 143
	'=='           shift, and enter state 144
	'~='           shift, and enter state 145
	'<='           shift, and enter state 146
	'>='           shift, and enter state 147
	'<'            shift, and enter state 148
	'>'            shift, and enter state 149
	'}'            reduce using rule 106
	';'            reduce using rule 106
	','            reduce using rule 106
	'..'           shift, and enter state 151

	Binop          goto state 129

State 206

	Tableconstructor -> '{' Fieldlist ',' '}' .         (rule 100)

	and            reduce using rule 100
	break          reduce using rule 100
	do             reduce using rule 100
	else           reduce using rule 100
	elseif         reduce using rule 100
	end            reduce using rule 100
	for            reduce using rule 100
	function       reduce using rule 100
	goto           reduce using rule 100
	if             reduce using rule 100
	local          reduce using rule 100
	or             reduce using rule 100
	repeat         reduce using rule 100
	return         reduce using rule 100
	then           reduce using rule 100
	until          reduce using rule 100
	while          reduce using rule 100
	'+'            reduce using rule 100
	'-'            reduce using rule 100
	'*'            reduce using rule 100
	'/'            reduce using rule 100
	'%'            reduce using rule 100
	'^'            reduce using rule 100
	'&'            reduce using rule 100
	'~'            reduce using rule 100
	'|'            reduce using rule 100
	'<<'           reduce using rule 100
	'>>'           reduce using rule 100
	'//'           reduce using rule 100
	'=='           reduce using rule 100
	'~='           reduce using rule 100
	'<='           reduce using rule 100
	'>='           reduce using rule 100
	'<'            reduce using rule 100
	'>'            reduce using rule 100
	'('            reduce using rule 100
	')'            reduce using rule 100
	'{'            reduce using rule 100
	'}'            reduce using rule 100
	'['            reduce using rule 100
	']'            reduce using rule 100
	'::'           reduce using rule 100
	';'            reduce using rule 100
	':'            reduce using rule 100
	','            reduce using rule 100
	'.'            reduce using rule 100
	'..'           reduce using rule 100
	'\''           reduce using rule 100
	'"'            reduce using rule 100
	ident          reduce using rule 100
	%eof           reduce using rule 100


State 207

	Tableconstructor -> '{' Fieldlist ';' '}' .         (rule 101)

	and            reduce using rule 101
	break          reduce using rule 101
	do             reduce using rule 101
	else           reduce using rule 101
	elseif         reduce using rule 101
	end            reduce using rule 101
	for            reduce using rule 101
	function       reduce using rule 101
	goto           reduce using rule 101
	if             reduce using rule 101
	local          reduce using rule 101
	or             reduce using rule 101
	repeat         reduce using rule 101
	return         reduce using rule 101
	then           reduce using rule 101
	until          reduce using rule 101
	while          reduce using rule 101
	'+'            reduce using rule 101
	'-'            reduce using rule 101
	'*'            reduce using rule 101
	'/'            reduce using rule 101
	'%'            reduce using rule 101
	'^'            reduce using rule 101
	'&'            reduce using rule 101
	'~'            reduce using rule 101
	'|'            reduce using rule 101
	'<<'           reduce using rule 101
	'>>'           reduce using rule 101
	'//'           reduce using rule 101
	'=='           reduce using rule 101
	'~='           reduce using rule 101
	'<='           reduce using rule 101
	'>='           reduce using rule 101
	'<'            reduce using rule 101
	'>'            reduce using rule 101
	'('            reduce using rule 101
	')'            reduce using rule 101
	'{'            reduce using rule 101
	'}'            reduce using rule 101
	'['            reduce using rule 101
	']'            reduce using rule 101
	'::'           reduce using rule 101
	';'            reduce using rule 101
	':'            reduce using rule 101
	','            reduce using rule 101
	'.'            reduce using rule 101
	'..'           reduce using rule 101
	'\''           reduce using rule 101
	'"'            reduce using rule 101
	ident          reduce using rule 101
	%eof           reduce using rule 101


State 208

	Fieldlist -> Field ',' Fieldlist .                  (rule 103)

	'}'            reduce using rule 103
	';'            reduce using rule 103
	','            reduce using rule 103


State 209

	Fieldlist -> Field ';' Fieldlist .                  (rule 104)

	'}'            reduce using rule 104
	';'            reduce using rule 104
	','            reduce using rule 104


State 210

	Field -> '[' Exp ']' . '=' Exp                      (rule 105)

	'='            shift, and enter state 219


State 211

	Funcbody -> '(' '...' ')' . Block end               (rule 95)

	break          shift, and enter state 67
	do             shift, and enter state 68
	end            reduce using rule 22
	for            shift, and enter state 69
	function       shift, and enter state 70
	goto           shift, and enter state 71
	if             shift, and enter state 72
	local          shift, and enter state 73
	repeat         shift, and enter state 74
	return         shift, and enter state 75
	while          shift, and enter state 76
	'('            shift, and enter state 19
	'::'           shift, and enter state 77
	';'            shift, and enter state 78
	ident          shift, and enter state 20

	Block          goto state 218
	Stat           goto state 58
	If             goto state 59
	If1            goto state 60
	Retstat        goto state 61
	Label          goto state 62
	Varlist1       goto state 63
	Varlist11      goto state 64
	Var            goto state 65
	Ident          goto state 16
	Prefixexp      goto state 17
	Funccall       goto state 66

State 212

	Funcbody -> '(' ')' Block . end                     (rule 94)

	end            shift, and enter state 217


State 213

	Funcbody -> '(' Identlist11 ')' . Block end         (rule 96)

	break          shift, and enter state 67
	do             shift, and enter state 68
	end            reduce using rule 22
	for            shift, and enter state 69
	function       shift, and enter state 70
	goto           shift, and enter state 71
	if             shift, and enter state 72
	local          shift, and enter state 73
	repeat         shift, and enter state 74
	return         shift, and enter state 75
	while          shift, and enter state 76
	'('            shift, and enter state 19
	'::'           shift, and enter state 77
	';'            shift, and enter state 78
	ident          shift, and enter state 20

	Block          goto state 216
	Stat           goto state 58
	If             goto state 59
	If1            goto state 60
	Retstat        goto state 61
	Label          goto state 62
	Varlist1       goto state 63
	Varlist11      goto state 64
	Var            goto state 65
	Ident          goto state 16
	Prefixexp      goto state 17
	Funccall       goto state 66

State 214

	Funcbody -> '(' Identlist11 ',' . '...' ')' Block end    (rule 97)

	'...'          shift, and enter state 215


State 215

	Funcbody -> '(' Identlist11 ',' '...' . ')' Block end    (rule 97)

	')'            shift, and enter state 233


State 216

	Funcbody -> '(' Identlist11 ')' Block . end         (rule 96)

	end            shift, and enter state 232


State 217

	Funcbody -> '(' ')' Block end .                     (rule 94)

	and            reduce using rule 94
	break          reduce using rule 94
	do             reduce using rule 94
	else           reduce using rule 94
	elseif         reduce using rule 94
	end            reduce using rule 94
	for            reduce using rule 94
	function       reduce using rule 94
	goto           reduce using rule 94
	if             reduce using rule 94
	local          reduce using rule 94
	or             reduce using rule 94
	repeat         reduce using rule 94
	return         reduce using rule 94
	then           reduce using rule 94
	until          reduce using rule 94
	while          reduce using rule 94
	'+'            reduce using rule 94
	'-'            reduce using rule 94
	'*'            reduce using rule 94
	'/'            reduce using rule 94
	'%'            reduce using rule 94
	'^'            reduce using rule 94
	'&'            reduce using rule 94
	'~'            reduce using rule 94
	'|'            reduce using rule 94
	'<<'           reduce using rule 94
	'>>'           reduce using rule 94
	'//'           reduce using rule 94
	'=='           reduce using rule 94
	'~='           reduce using rule 94
	'<='           reduce using rule 94
	'>='           reduce using rule 94
	'<'            reduce using rule 94
	'>'            reduce using rule 94
	'('            reduce using rule 94
	')'            reduce using rule 94
	'}'            reduce using rule 94
	']'            reduce using rule 94
	'::'           reduce using rule 94
	';'            reduce using rule 94
	','            reduce using rule 94
	'..'           reduce using rule 94
	ident          reduce using rule 94


State 218

	Funcbody -> '(' '...' ')' Block . end               (rule 95)

	end            shift, and enter state 231


State 219

	Field -> '[' Exp ']' '=' . Exp                      (rule 105)

	false          shift, and enter state 28
	function       shift, and enter state 29
	nil            shift, and enter state 30
	not            shift, and enter state 31
	true           shift, and enter state 32
	'-'            shift, and enter state 33
	'#'            shift, and enter state 34
	'~'            shift, and enter state 35
	'<'            shift, and enter state 36
	'('            shift, and enter state 19
	'{'            shift, and enter state 37
	'...'          shift, and enter state 38
	'\''           shift, and enter state 39
	'"'            shift, and enter state 40
	ident          shift, and enter state 20
	int            shift, and enter state 41
	float          shift, and enter state 42

	Var            goto state 15
	Ident          goto state 16
	Exp            goto state 230
	Prefixexp      goto state 23
	Funccall       goto state 24
	Tableconstructorgoto state 25
	Unop           goto state 26
	String         goto state 27

State 220

	Stat -> for Ident '=' Exp ',' . Exp do Block end    (rule 34)
	Stat -> for Ident '=' Exp ',' . Exp ',' Exp do Block end    (rule 35)

	false          shift, and enter state 28
	function       shift, and enter state 29
	nil            shift, and enter state 30
	not            shift, and enter state 31
	true           shift, and enter state 32
	'-'            shift, and enter state 33
	'#'            shift, and enter state 34
	'~'            shift, and enter state 35
	'<'            shift, and enter state 36
	'('            shift, and enter state 19
	'{'            shift, and enter state 37
	'...'          shift, and enter state 38
	'\''           shift, and enter state 39
	'"'            shift, and enter state 40
	ident          shift, and enter state 20
	int            shift, and enter state 41
	float          shift, and enter state 42

	Var            goto state 15
	Ident          goto state 16
	Exp            goto state 229
	Prefixexp      goto state 23
	Funccall       goto state 24
	Tableconstructorgoto state 25
	Unop           goto state 26
	String         goto state 27

State 221

	Stat -> for Identlist1 in Explist1 do . Block end    (rule 36)

	break          shift, and enter state 67
	do             shift, and enter state 68
	end            reduce using rule 22
	for            shift, and enter state 69
	function       shift, and enter state 70
	goto           shift, and enter state 71
	if             shift, and enter state 72
	local          shift, and enter state 73
	repeat         shift, and enter state 74
	return         shift, and enter state 75
	while          shift, and enter state 76
	'('            shift, and enter state 19
	'::'           shift, and enter state 77
	';'            shift, and enter state 78
	ident          shift, and enter state 20

	Block          goto state 228
	Stat           goto state 58
	If             goto state 59
	If1            goto state 60
	Retstat        goto state 61
	Label          goto state 62
	Varlist1       goto state 63
	Varlist11      goto state 64
	Var            goto state 65
	Ident          goto state 16
	Prefixexp      goto state 17
	Funccall       goto state 66

State 222

	If1 -> if Exp then Block ElseIf .                   (rule 43)

	else           reduce using rule 43
	end            reduce using rule 43


State 223

	ElseIf -> ElseIf1 .                                 (rule 45)
	ElseIf -> ElseIf1 . ElseIf                          (rule 46)

	else           reduce using rule 45
	elseif         shift, and enter state 224
	end            reduce using rule 45

	ElseIf         goto state 227
	ElseIf1        goto state 223

State 224

	ElseIf1 -> elseif . Exp then Block                  (rule 47)

	false          shift, and enter state 28
	function       shift, and enter state 29
	nil            shift, and enter state 30
	not            shift, and enter state 31
	true           shift, and enter state 32
	'-'            shift, and enter state 33
	'#'            shift, and enter state 34
	'~'            shift, and enter state 35
	'<'            shift, and enter state 36
	'('            shift, and enter state 19
	'{'            shift, and enter state 37
	'...'          shift, and enter state 38
	'\''           shift, and enter state 39
	'"'            shift, and enter state 40
	ident          shift, and enter state 20
	int            shift, and enter state 41
	float          shift, and enter state 42

	Var            goto state 15
	Ident          goto state 16
	Exp            goto state 226
	Prefixexp      goto state 23
	Funccall       goto state 24
	Tableconstructorgoto state 25
	Unop           goto state 26
	String         goto state 27

State 225

	Stat -> while Exp do Block end .                    (rule 31)

	break          reduce using rule 31
	do             reduce using rule 31
	else           reduce using rule 31
	elseif         reduce using rule 31
	end            reduce using rule 31
	for            reduce using rule 31
	function       reduce using rule 31
	goto           reduce using rule 31
	if             reduce using rule 31
	local          reduce using rule 31
	repeat         reduce using rule 31
	return         reduce using rule 31
	until          reduce using rule 31
	while          reduce using rule 31
	'('            reduce using rule 31
	'}'            reduce using rule 31
	'::'           reduce using rule 31
	';'            reduce using rule 31
	ident          reduce using rule 31


State 226

	ElseIf1 -> elseif Exp . then Block                  (rule 47)
	Exp -> Exp . Binop Exp                              (rule 81)

	and            shift, and enter state 130
	or             shift, and enter state 131
	then           shift, and enter state 238
	'+'            shift, and enter state 132
	'-'            shift, and enter state 133
	'*'            shift, and enter state 134
	'/'            shift, and enter state 135
	'%'            shift, and enter state 136
	'^'            shift, and enter state 137
	'&'            shift, and enter state 138
	'~'            shift, and enter state 139
	'|'            shift, and enter state 140
	'<<'           shift, and enter state 141
	'>>'           shift, and enter state 142
	'//'           shift, and enter state 143
	'=='           shift, and enter state 144
	'~='           shift, and enter state 145
	'<='           shift, and enter state 146
	'>='           shift, and enter state 147
	'<'            shift, and enter state 148
	'>'            shift, and enter state 149
	'..'           shift, and enter state 151

	Binop          goto state 129

State 227

	ElseIf -> ElseIf1 ElseIf .                          (rule 46)

	else           reduce using rule 46
	end            reduce using rule 46


State 228

	Stat -> for Identlist1 in Explist1 do Block . end    (rule 36)

	end            shift, and enter state 237


State 229

	Stat -> for Ident '=' Exp ',' Exp . do Block end    (rule 34)
	Stat -> for Ident '=' Exp ',' Exp . ',' Exp do Block end    (rule 35)
	Exp -> Exp . Binop Exp                              (rule 81)

	and            shift, and enter state 130
	do             shift, and enter state 235
	or             shift, and enter state 131
	'+'            shift, and enter state 132
	'-'            shift, and enter state 133
	'*'            shift, and enter state 134
	'/'            shift, and enter state 135
	'%'            shift, and enter state 136
	'^'            shift, and enter state 137
	'&'            shift, and enter state 138
	'~'            shift, and enter state 139
	'|'            shift, and enter state 140
	'<<'           shift, and enter state 141
	'>>'           shift, and enter state 142
	'//'           shift, and enter state 143
	'=='           shift, and enter state 144
	'~='           shift, and enter state 145
	'<='           shift, and enter state 146
	'>='           shift, and enter state 147
	'<'            shift, and enter state 148
	'>'            shift, and enter state 149
	','            shift, and enter state 236
	'..'           shift, and enter state 151

	Binop          goto state 129

State 230

	Exp -> Exp . Binop Exp                              (rule 81)
	Field -> '[' Exp ']' '=' Exp .                      (rule 105)

	and            shift, and enter state 130
	or             shift, and enter state 131
	'+'            shift, and enter state 132
	'-'            shift, and enter state 133
	'*'            shift, and enter state 134
	'/'            shift, and enter state 135
	'%'            shift, and enter state 136
	'^'            shift, and enter state 137
	'&'            shift, and enter state 138
	'~'            shift, and enter state 139
	'|'            shift, and enter state 140
	'<<'           shift, and enter state 141
	'>>'           shift, and enter state 142
	'//'           shift, and enter state 143
	'=='           shift, and enter state 144
	'~='           shift, and enter state 145
	'<='           shift, and enter state 146
	'>='           shift, and enter state 147
	'<'            shift, and enter state 148
	'>'            shift, and enter state 149
	'}'            reduce using rule 105
	';'            reduce using rule 105
	','            reduce using rule 105
	'..'           shift, and enter state 151

	Binop          goto state 129

State 231

	Funcbody -> '(' '...' ')' Block end .               (rule 95)

	and            reduce using rule 95
	break          reduce using rule 95
	do             reduce using rule 95
	else           reduce using rule 95
	elseif         reduce using rule 95
	end            reduce using rule 95
	for            reduce using rule 95
	function       reduce using rule 95
	goto           reduce using rule 95
	if             reduce using rule 95
	local          reduce using rule 95
	or             reduce using rule 95
	repeat         reduce using rule 95
	return         reduce using rule 95
	then           reduce using rule 95
	until          reduce using rule 95
	while          reduce using rule 95
	'+'            reduce using rule 95
	'-'            reduce using rule 95
	'*'            reduce using rule 95
	'/'            reduce using rule 95
	'%'            reduce using rule 95
	'^'            reduce using rule 95
	'&'            reduce using rule 95
	'~'            reduce using rule 95
	'|'            reduce using rule 95
	'<<'           reduce using rule 95
	'>>'           reduce using rule 95
	'//'           reduce using rule 95
	'=='           reduce using rule 95
	'~='           reduce using rule 95
	'<='           reduce using rule 95
	'>='           reduce using rule 95
	'<'            reduce using rule 95
	'>'            reduce using rule 95
	'('            reduce using rule 95
	')'            reduce using rule 95
	'}'            reduce using rule 95
	']'            reduce using rule 95
	'::'           reduce using rule 95
	';'            reduce using rule 95
	','            reduce using rule 95
	'..'           reduce using rule 95
	ident          reduce using rule 95


State 232

	Funcbody -> '(' Identlist11 ')' Block end .         (rule 96)

	and            reduce using rule 96
	break          reduce using rule 96
	do             reduce using rule 96
	else           reduce using rule 96
	elseif         reduce using rule 96
	end            reduce using rule 96
	for            reduce using rule 96
	function       reduce using rule 96
	goto           reduce using rule 96
	if             reduce using rule 96
	local          reduce using rule 96
	or             reduce using rule 96
	repeat         reduce using rule 96
	return         reduce using rule 96
	then           reduce using rule 96
	until          reduce using rule 96
	while          reduce using rule 96
	'+'            reduce using rule 96
	'-'            reduce using rule 96
	'*'            reduce using rule 96
	'/'            reduce using rule 96
	'%'            reduce using rule 96
	'^'            reduce using rule 96
	'&'            reduce using rule 96
	'~'            reduce using rule 96
	'|'            reduce using rule 96
	'<<'           reduce using rule 96
	'>>'           reduce using rule 96
	'//'           reduce using rule 96
	'=='           reduce using rule 96
	'~='           reduce using rule 96
	'<='           reduce using rule 96
	'>='           reduce using rule 96
	'<'            reduce using rule 96
	'>'            reduce using rule 96
	'('            reduce using rule 96
	')'            reduce using rule 96
	'}'            reduce using rule 96
	']'            reduce using rule 96
	'::'           reduce using rule 96
	';'            reduce using rule 96
	','            reduce using rule 96
	'..'           reduce using rule 96
	ident          reduce using rule 96


State 233

	Funcbody -> '(' Identlist11 ',' '...' ')' . Block end    (rule 97)

	break          shift, and enter state 67
	do             shift, and enter state 68
	end            reduce using rule 22
	for            shift, and enter state 69
	function       shift, and enter state 70
	goto           shift, and enter state 71
	if             shift, and enter state 72
	local          shift, and enter state 73
	repeat         shift, and enter state 74
	return         shift, and enter state 75
	while          shift, and enter state 76
	'('            shift, and enter state 19
	'::'           shift, and enter state 77
	';'            shift, and enter state 78
	ident          shift, and enter state 20

	Block          goto state 234
	Stat           goto state 58
	If             goto state 59
	If1            goto state 60
	Retstat        goto state 61
	Label          goto state 62
	Varlist1       goto state 63
	Varlist11      goto state 64
	Var            goto state 65
	Ident          goto state 16
	Prefixexp      goto state 17
	Funccall       goto state 66

State 234

	Funcbody -> '(' Identlist11 ',' '...' ')' Block . end    (rule 97)

	end            shift, and enter state 242


State 235

	Stat -> for Ident '=' Exp ',' Exp do . Block end    (rule 34)

	break          shift, and enter state 67
	do             shift, and enter state 68
	end            reduce using rule 22
	for            shift, and enter state 69
	function       shift, and enter state 70
	goto           shift, and enter state 71
	if             shift, and enter state 72
	local          shift, and enter state 73
	repeat         shift, and enter state 74
	return         shift, and enter state 75
	while          shift, and enter state 76
	'('            shift, and enter state 19
	'::'           shift, and enter state 77
	';'            shift, and enter state 78
	ident          shift, and enter state 20

	Block          goto state 241
	Stat           goto state 58
	If             goto state 59
	If1            goto state 60
	Retstat        goto state 61
	Label          goto state 62
	Varlist1       goto state 63
	Varlist11      goto state 64
	Var            goto state 65
	Ident          goto state 16
	Prefixexp      goto state 17
	Funccall       goto state 66

State 236

	Stat -> for Ident '=' Exp ',' Exp ',' . Exp do Block end    (rule 35)

	false          shift, and enter state 28
	function       shift, and enter state 29
	nil            shift, and enter state 30
	not            shift, and enter state 31
	true           shift, and enter state 32
	'-'            shift, and enter state 33
	'#'            shift, and enter state 34
	'~'            shift, and enter state 35
	'<'            shift, and enter state 36
	'('            shift, and enter state 19
	'{'            shift, and enter state 37
	'...'          shift, and enter state 38
	'\''           shift, and enter state 39
	'"'            shift, and enter state 40
	ident          shift, and enter state 20
	int            shift, and enter state 41
	float          shift, and enter state 42

	Var            goto state 15
	Ident          goto state 16
	Exp            goto state 240
	Prefixexp      goto state 23
	Funccall       goto state 24
	Tableconstructorgoto state 25
	Unop           goto state 26
	String         goto state 27

State 237

	Stat -> for Identlist1 in Explist1 do Block end .    (rule 36)

	break          reduce using rule 36
	do             reduce using rule 36
	else           reduce using rule 36
	elseif         reduce using rule 36
	end            reduce using rule 36
	for            reduce using rule 36
	function       reduce using rule 36
	goto           reduce using rule 36
	if             reduce using rule 36
	local          reduce using rule 36
	repeat         reduce using rule 36
	return         reduce using rule 36
	until          reduce using rule 36
	while          reduce using rule 36
	'('            reduce using rule 36
	'}'            reduce using rule 36
	'::'           reduce using rule 36
	';'            reduce using rule 36
	ident          reduce using rule 36


State 238

	ElseIf1 -> elseif Exp then . Block                  (rule 47)

	break          shift, and enter state 67
	do             shift, and enter state 68
	else           reduce using rule 22
	elseif         reduce using rule 22
	end            reduce using rule 22
	for            shift, and enter state 69
	function       shift, and enter state 70
	goto           shift, and enter state 71
	if             shift, and enter state 72
	local          shift, and enter state 73
	repeat         shift, and enter state 74
	return         shift, and enter state 75
	while          shift, and enter state 76
	'('            shift, and enter state 19
	'::'           shift, and enter state 77
	';'            shift, and enter state 78
	ident          shift, and enter state 20

	Block          goto state 239
	Stat           goto state 58
	If             goto state 59
	If1            goto state 60
	Retstat        goto state 61
	Label          goto state 62
	Varlist1       goto state 63
	Varlist11      goto state 64
	Var            goto state 65
	Ident          goto state 16
	Prefixexp      goto state 17
	Funccall       goto state 66

State 239

	ElseIf1 -> elseif Exp then Block .                  (rule 47)

	else           reduce using rule 47
	elseif         reduce using rule 47
	end            reduce using rule 47


State 240

	Stat -> for Ident '=' Exp ',' Exp ',' Exp . do Block end    (rule 35)
	Exp -> Exp . Binop Exp                              (rule 81)

	and            shift, and enter state 130
	do             shift, and enter state 244
	or             shift, and enter state 131
	'+'            shift, and enter state 132
	'-'            shift, and enter state 133
	'*'            shift, and enter state 134
	'/'            shift, and enter state 135
	'%'            shift, and enter state 136
	'^'            shift, and enter state 137
	'&'            shift, and enter state 138
	'~'            shift, and enter state 139
	'|'            shift, and enter state 140
	'<<'           shift, and enter state 141
	'>>'           shift, and enter state 142
	'//'           shift, and enter state 143
	'=='           shift, and enter state 144
	'~='           shift, and enter state 145
	'<='           shift, and enter state 146
	'>='           shift, and enter state 147
	'<'            shift, and enter state 148
	'>'            shift, and enter state 149
	'..'           shift, and enter state 151

	Binop          goto state 129

State 241

	Stat -> for Ident '=' Exp ',' Exp do Block . end    (rule 34)

	end            shift, and enter state 243


State 242

	Funcbody -> '(' Identlist11 ',' '...' ')' Block end .    (rule 97)

	and            reduce using rule 97
	break          reduce using rule 97
	do             reduce using rule 97
	else           reduce using rule 97
	elseif         reduce using rule 97
	end            reduce using rule 97
	for            reduce using rule 97
	function       reduce using rule 97
	goto           reduce using rule 97
	if             reduce using rule 97
	local          reduce using rule 97
	or             reduce using rule 97
	repeat         reduce using rule 97
	return         reduce using rule 97
	then           reduce using rule 97
	until          reduce using rule 97
	while          reduce using rule 97
	'+'            reduce using rule 97
	'-'            reduce using rule 97
	'*'            reduce using rule 97
	'/'            reduce using rule 97
	'%'            reduce using rule 97
	'^'            reduce using rule 97
	'&'            reduce using rule 97
	'~'            reduce using rule 97
	'|'            reduce using rule 97
	'<<'           reduce using rule 97
	'>>'           reduce using rule 97
	'//'           reduce using rule 97
	'=='           reduce using rule 97
	'~='           reduce using rule 97
	'<='           reduce using rule 97
	'>='           reduce using rule 97
	'<'            reduce using rule 97
	'>'            reduce using rule 97
	'('            reduce using rule 97
	')'            reduce using rule 97
	'}'            reduce using rule 97
	']'            reduce using rule 97
	'::'           reduce using rule 97
	';'            reduce using rule 97
	','            reduce using rule 97
	'..'           reduce using rule 97
	ident          reduce using rule 97


State 243

	Stat -> for Ident '=' Exp ',' Exp do Block end .    (rule 34)

	break          reduce using rule 34
	do             reduce using rule 34
	else           reduce using rule 34
	elseif         reduce using rule 34
	end            reduce using rule 34
	for            reduce using rule 34
	function       reduce using rule 34
	goto           reduce using rule 34
	if             reduce using rule 34
	local          reduce using rule 34
	repeat         reduce using rule 34
	return         reduce using rule 34
	until          reduce using rule 34
	while          reduce using rule 34
	'('            reduce using rule 34
	'}'            reduce using rule 34
	'::'           reduce using rule 34
	';'            reduce using rule 34
	ident          reduce using rule 34


State 244

	Stat -> for Ident '=' Exp ',' Exp ',' Exp do . Block end    (rule 35)

	break          shift, and enter state 67
	do             shift, and enter state 68
	end            reduce using rule 22
	for            shift, and enter state 69
	function       shift, and enter state 70
	goto           shift, and enter state 71
	if             shift, and enter state 72
	local          shift, and enter state 73
	repeat         shift, and enter state 74
	return         shift, and enter state 75
	while          shift, and enter state 76
	'('            shift, and enter state 19
	'::'           shift, and enter state 77
	';'            shift, and enter state 78
	ident          shift, and enter state 20

	Block          goto state 245
	Stat           goto state 58
	If             goto state 59
	If1            goto state 60
	Retstat        goto state 61
	Label          goto state 62
	Varlist1       goto state 63
	Varlist11      goto state 64
	Var            goto state 65
	Ident          goto state 16
	Prefixexp      goto state 17
	Funccall       goto state 66

State 245

	Stat -> for Ident '=' Exp ',' Exp ',' Exp do Block . end    (rule 35)

	end            shift, and enter state 246


State 246

	Stat -> for Ident '=' Exp ',' Exp ',' Exp do Block end .    (rule 35)

	break          reduce using rule 35
	do             reduce using rule 35
	else           reduce using rule 35
	elseif         reduce using rule 35
	end            reduce using rule 35
	for            reduce using rule 35
	function       reduce using rule 35
	goto           reduce using rule 35
	if             reduce using rule 35
	local          reduce using rule 35
	repeat         reduce using rule 35
	return         reduce using rule 35
	until          reduce using rule 35
	while          reduce using rule 35
	'('            reduce using rule 35
	'}'            reduce using rule 35
	'::'           reduce using rule 35
	';'            reduce using rule 35
	ident          reduce using rule 35


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 135
Number of terminals: 66
Number of non-terminals: 41
Number of states: 247
